Module(
    body=[
        Expr(
            value=Constant(value='\nAdapted from http://hg.python.org/cpython/file/936621d33c38/Lib/test/test_scope.py\n')),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestSimpleNesting')],
                keywords=[])),
        FunctionDef(
            name='make_adder',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                FunctionDef(
                    name='adder',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='y')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=BinOp(
                                left=Name(id='x', ctx=Load()),
                                op=Add(),
                                right=Name(id='y', ctx=Load())))],
                    decorator_list=[]),
                Return(
                    value=Name(id='adder', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='inc', ctx=Store())],
            value=Call(
                func=Name(id='make_adder', ctx=Load()),
                args=[
                    Constant(value=1)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='plus10', ctx=Store())],
            value=Call(
                func=Name(id='make_adder', ctx=Load()),
                args=[
                    Constant(value=10)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]),
                    Constant(value=2),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                Constant(value=1)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=2)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=4))],
                        keywords=[]),
                    UnaryOp(
                        op=USub(),
                        operand=Constant(value=3)),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=4))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=3))])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            Constant(value=8)],
                        keywords=[]),
                    Constant(value=18),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                Constant(value=8)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=18)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=2))],
                        keywords=[]),
                    Constant(value=8),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=2))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=8)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestSimpleAndRebinding')],
                keywords=[])),
        FunctionDef(
            name='make_adder3',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                FunctionDef(
                    name='adder',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='y')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=BinOp(
                                left=Name(id='x', ctx=Load()),
                                op=Add(),
                                right=Name(id='y', ctx=Load())))],
                    decorator_list=[]),
                Assign(
                    targets=[
                        Name(id='x', ctx=Store())],
                    value=BinOp(
                        left=Name(id='x', ctx=Load()),
                        op=Add(),
                        right=Constant(value=1))),
                Return(
                    value=Name(id='adder', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='inc', ctx=Store())],
            value=Call(
                func=Name(id='make_adder3', ctx=Load()),
                args=[
                    Constant(value=0)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='plus10', ctx=Store())],
            value=Call(
                func=Name(id='make_adder3', ctx=Load()),
                args=[
                    Constant(value=9)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]),
                    Constant(value=2),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                Constant(value=1)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=2)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=4))],
                        keywords=[]),
                    UnaryOp(
                        op=USub(),
                        operand=Constant(value=3)),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=4))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=3))])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            Constant(value=8)],
                        keywords=[]),
                    Constant(value=18),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                Constant(value=8)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=18)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=2))],
                        keywords=[]),
                    Constant(value=8),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=2))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=8)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestNestingGlobalNoFree')],
                keywords=[])),
        FunctionDef(
            name='make_adder4',
            args=arguments(
                posonlyargs=[],
                args=[],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                FunctionDef(
                    name='nest',
                    args=arguments(
                        posonlyargs=[],
                        args=[],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        FunctionDef(
                            name='nest',
                            args=arguments(
                                posonlyargs=[],
                                args=[],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            body=[
                                FunctionDef(
                                    name='adder',
                                    args=arguments(
                                        posonlyargs=[],
                                        args=[
                                            arg(arg='y')],
                                        kwonlyargs=[],
                                        kw_defaults=[],
                                        defaults=[]),
                                    body=[
                                        Return(
                                            value=BinOp(
                                                left=Name(id='global_x', ctx=Load()),
                                                op=Add(),
                                                right=Name(id='y', ctx=Load())))],
                                    decorator_list=[]),
                                Return(
                                    value=Name(id='adder', ctx=Load()))],
                            decorator_list=[]),
                        Return(
                            value=Call(
                                func=Name(id='nest', ctx=Load()),
                                args=[],
                                keywords=[]))],
                    decorator_list=[]),
                Return(
                    value=Call(
                        func=Name(id='nest', ctx=Load()),
                        args=[],
                        keywords=[]))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='global_x', ctx=Store())],
            value=Constant(value=1)),
        Assign(
            targets=[
                Name(id='adder', ctx=Store())],
            value=Call(
                func=Name(id='make_adder4', ctx=Load()),
                args=[],
                keywords=[])),
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=Call(
                func=Name(id='adder', ctx=Load()),
                args=[
                    Constant(value=1)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Constant(value=2),
                    Compare(
                        left=Name(id='x', ctx=Load()),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=2)])],
                keywords=[])),
        Assign(
            targets=[
                Name(id='global_x', ctx=Store())],
            value=Constant(value=10)),
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=Call(
                func=Name(id='adder', ctx=Load()),
                args=[
                    UnaryOp(
                        op=USub(),
                        operand=Constant(value=2))],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Constant(value=8),
                    Compare(
                        left=Name(id='x', ctx=Load()),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=8)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestNestingPlusFreeRefToGlobal')],
                keywords=[])),
        FunctionDef(
            name='make_adder6',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Global(
                    names=[
                        'global_nest_x']),
                FunctionDef(
                    name='adder',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='y')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=BinOp(
                                left=Name(id='global_nest_x', ctx=Load()),
                                op=Add(),
                                right=Name(id='y', ctx=Load())))],
                    decorator_list=[]),
                Assign(
                    targets=[
                        Name(id='global_nest_x', ctx=Store())],
                    value=Name(id='x', ctx=Load())),
                Return(
                    value=Name(id='adder', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='inc', ctx=Store())],
            value=Call(
                func=Name(id='make_adder6', ctx=Load()),
                args=[
                    Constant(value=1)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]),
                    Constant(value=2),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                Constant(value=1)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=2)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=4))],
                        keywords=[]),
                    UnaryOp(
                        op=USub(),
                        operand=Constant(value=3)),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=4))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=3))])],
                keywords=[])),
        Assign(
            targets=[
                Name(id='plus10', ctx=Store())],
            value=Call(
                func=Name(id='make_adder6', ctx=Load()),
                args=[
                    Constant(value=10)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            Constant(value=8)],
                        keywords=[]),
                    Constant(value=18),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                Constant(value=8)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=18)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=2))],
                        keywords=[]),
                    Constant(value=8),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=2))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=8)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestNearestEnclosingScope')],
                keywords=[])),
        FunctionDef(
            name='f',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                FunctionDef(
                    name='g',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='y')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='x', ctx=Store())],
                            value=Constant(value=42)),
                        FunctionDef(
                            name='h',
                            args=arguments(
                                posonlyargs=[],
                                args=[
                                    arg(arg='z')],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            body=[
                                Return(
                                    value=BinOp(
                                        left=Name(id='x', ctx=Load()),
                                        op=Add(),
                                        right=Name(id='z', ctx=Load())))],
                            decorator_list=[]),
                        Return(
                            value=Name(id='h', ctx=Load()))],
                    decorator_list=[]),
                Return(
                    value=Call(
                        func=Name(id='g', ctx=Load()),
                        args=[
                            Constant(value=2)],
                        keywords=[]))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='test_func', ctx=Store())],
            value=Call(
                func=Name(id='f', ctx=Load()),
                args=[
                    Constant(value=10)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='test_func', ctx=Load()),
                        args=[
                            Constant(value=5)],
                        keywords=[]),
                    Constant(value=47),
                    Compare(
                        left=Call(
                            func=Name(id='test_func', ctx=Load()),
                            args=[
                                Constant(value=5)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=47)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestMixedFreevarsAndCellvars')],
                keywords=[])),
        FunctionDef(
            name='identity',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Return(
                    value=Name(id='x', ctx=Load()))],
            decorator_list=[]),
        FunctionDef(
            name='f',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x'),
                    arg(arg='y'),
                    arg(arg='z')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                FunctionDef(
                    name='g',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='a'),
                            arg(arg='b'),
                            arg(arg='c')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='a', ctx=Store())],
                            value=BinOp(
                                left=Name(id='a', ctx=Load()),
                                op=Add(),
                                right=Name(id='x', ctx=Load()))),
                        FunctionDef(
                            name='h',
                            args=arguments(
                                posonlyargs=[],
                                args=[],
                                kwonlyargs=[],
                                kw_defaults=[],
                                defaults=[]),
                            body=[
                                Return(
                                    value=Call(
                                        func=Name(id='identity', ctx=Load()),
                                        args=[
                                            BinOp(
                                                left=Name(id='z', ctx=Load()),
                                                op=Mult(),
                                                right=BinOp(
                                                    left=Name(id='b', ctx=Load()),
                                                    op=Add(),
                                                    right=Name(id='y', ctx=Load())))],
                                        keywords=[]))],
                            decorator_list=[]),
                        Assign(
                            targets=[
                                Name(id='y', ctx=Store())],
                            value=BinOp(
                                left=Name(id='c', ctx=Load()),
                                op=Add(),
                                right=Name(id='z', ctx=Load()))),
                        Return(
                            value=Name(id='h', ctx=Load()))],
                    decorator_list=[]),
                Return(
                    value=Name(id='g', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='g', ctx=Store())],
            value=Call(
                func=Name(id='f', ctx=Load()),
                args=[
                    Constant(value=1),
                    Constant(value=2),
                    Constant(value=3)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='h', ctx=Store())],
            value=Call(
                func=Name(id='g', ctx=Load()),
                args=[
                    Constant(value=2),
                    Constant(value=4),
                    Constant(value=6)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='h', ctx=Load()),
                        args=[],
                        keywords=[]),
                    Constant(value=39),
                    Compare(
                        left=Call(
                            func=Name(id='h', ctx=Load()),
                            args=[],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=39)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestFreeVarInMethod')],
                keywords=[])),
        Assign(
            targets=[
                Name(id='method_and_var', ctx=Store())],
            value=Constant(value='var')),
        ClassDef(
            name='Test',
            bases=[],
            keywords=[],
            body=[
                FunctionDef(
                    name='method_and_var',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=Constant(value='method'))],
                    decorator_list=[]),
                FunctionDef(
                    name='test',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=Name(id='method_and_var', ctx=Load()))],
                    decorator_list=[]),
                FunctionDef(
                    name='actual_global',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                    Constant(value='global')],
                                keywords=[]))],
                    decorator_list=[]),
                FunctionDef(
                    name='str',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                    Name(id='self', ctx=Load())],
                                keywords=[]))],
                    decorator_list=[])],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='t', ctx=Store())],
            value=Call(
                func=Name(id='Test', ctx=Load()),
                args=[],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Attribute(
                            value=Name(id='t', ctx=Load()),
                            attr='test',
                            ctx=Load()),
                        args=[],
                        keywords=[]),
                    Constant(value='var'),
                    Compare(
                        left=Call(
                            func=Attribute(
                                value=Name(id='t', ctx=Load()),
                                attr='test',
                                ctx=Load()),
                            args=[],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value='var')])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Attribute(
                            value=Name(id='t', ctx=Load()),
                            attr='method_and_var',
                            ctx=Load()),
                        args=[],
                        keywords=[]),
                    Constant(value='method'),
                    Compare(
                        left=Call(
                            func=Attribute(
                                value=Name(id='t', ctx=Load()),
                                attr='method_and_var',
                                ctx=Load()),
                            args=[],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value='method')])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Attribute(
                            value=Name(id='t', ctx=Load()),
                            attr='actual_global',
                            ctx=Load()),
                        args=[],
                        keywords=[]),
                    Constant(value='global'),
                    Compare(
                        left=Call(
                            func=Attribute(
                                value=Name(id='t', ctx=Load()),
                                attr='actual_global',
                                ctx=Load()),
                            args=[],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value='global')])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestRecursion')],
                keywords=[])),
        FunctionDef(
            name='f',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                FunctionDef(
                    name='fact',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='n')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        If(
                            test=Compare(
                                left=Name(id='n', ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=0)]),
                            body=[
                                Return(
                                    value=Constant(value=1))],
                            orelse=[
                                Return(
                                    value=BinOp(
                                        left=Name(id='n', ctx=Load()),
                                        op=Mult(),
                                        right=Call(
                                            func=Name(id='fact', ctx=Load()),
                                            args=[
                                                BinOp(
                                                    left=Name(id='n', ctx=Load()),
                                                    op=Sub(),
                                                    right=Constant(value=1))],
                                            keywords=[])))])],
                    decorator_list=[]),
                If(
                    test=Compare(
                        left=Name(id='x', ctx=Load()),
                        ops=[
                            GtE()],
                        comparators=[
                            Constant(value=0)]),
                    body=[
                        Return(
                            value=Call(
                                func=Name(id='fact', ctx=Load()),
                                args=[
                                    Name(id='x', ctx=Load())],
                                keywords=[]))],
                    orelse=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='x must be >=0')],
                                keywords=[]))])],
            decorator_list=[]),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='f', ctx=Load()),
                        args=[
                            Constant(value=6)],
                        keywords=[]),
                    Constant(value=720),
                    Compare(
                        left=Call(
                            func=Name(id='f', ctx=Load()),
                            args=[
                                Constant(value=6)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=720)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='\ntestLambdas')],
                keywords=[])),
        FunctionDef(
            name='f1',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Return(
                    value=Lambda(
                        args=arguments(
                            posonlyargs=[],
                            args=[
                                arg(arg='y')],
                            kwonlyargs=[],
                            kw_defaults=[],
                            defaults=[]),
                        body=BinOp(
                            left=Name(id='x', ctx=Load()),
                            op=Add(),
                            right=Name(id='y', ctx=Load()))))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='inc', ctx=Store())],
            value=Call(
                func=Name(id='f1', ctx=Load()),
                args=[
                    Constant(value=1)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='plus10', ctx=Store())],
            value=Call(
                func=Name(id='f1', ctx=Load()),
                args=[
                    Constant(value=10)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            Constant(value=1)],
                        keywords=[]),
                    Constant(value=2),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                Constant(value=1)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=2)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=4))],
                        keywords=[]),
                    UnaryOp(
                        op=USub(),
                        operand=Constant(value=3)),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=4))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=3))])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            Constant(value=8)],
                        keywords=[]),
                    Constant(value=18),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                Constant(value=8)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=18)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='plus10', ctx=Load()),
                        args=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=2))],
                        keywords=[]),
                    Constant(value=8),
                    Compare(
                        left=Call(
                            func=Name(id='plus10', ctx=Load()),
                            args=[
                                UnaryOp(
                                    op=USub(),
                                    operand=Constant(value=2))],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=8)])],
                keywords=[])),
        FunctionDef(
            name='f3',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='x')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Return(
                    value=Lambda(
                        args=arguments(
                            posonlyargs=[],
                            args=[
                                arg(arg='y')],
                            kwonlyargs=[],
                            kw_defaults=[],
                            defaults=[]),
                        body=BinOp(
                            left=Name(id='global_x', ctx=Load()),
                            op=Add(),
                            right=Name(id='y', ctx=Load()))))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='global_x', ctx=Store())],
            value=Constant(value=1)),
        Assign(
            targets=[
                Name(id='inc', ctx=Store())],
            value=Call(
                func=Name(id='f3', ctx=Load()),
                args=[
                    Constant(value=None)],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='inc', ctx=Load()),
                        args=[
                            Constant(value=2)],
                        keywords=[]),
                    Constant(value=3),
                    Compare(
                        left=Call(
                            func=Name(id='inc', ctx=Load()),
                            args=[
                                Constant(value=2)],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=3)])],
                keywords=[]))],
    type_ignores=[])