Module(
    body=[
        ClassDef(
            name='A',
            bases=[],
            keywords=[],
            body=[
                FunctionDef(
                    name='__getitem__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='slices')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Return(
                            value=Name(id='slices', ctx=Load()))],
                    decorator_list=[])],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='a', ctx=Store())],
            value=Call(
                func=Name(id='A', ctx=Load()),
                args=[],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Constant(value=1),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(
                            lower=Constant(value=0),
                            upper=Constant(value=2)),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(
                            upper=Constant(value=2)),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=2)],
                        keywords=[])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(
                            lower=Constant(value=1)),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(
                            step=UnaryOp(
                                op=USub(),
                                operand=Constant(value=1))),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Tuple(
                            elts=[
                                Constant(value=0),
                                Slice(
                                    lower=Constant(value=1),
                                    upper=Constant(value=2))],
                            ctx=Load()),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Tuple(
                            elts=[
                                Slice(
                                    lower=Constant(value=0),
                                    upper=Constant(value=2)),
                                Slice(
                                    lower=Constant(value=2),
                                    upper=Constant(value=30),
                                    step=Constant(value=1))],
                            ctx=Load()),
                        ctx=Load())],
                keywords=[])),
        Assert(
            test=Compare(
                left=Subscript(
                    value=Name(id='a', ctx=Load()),
                    slice=Constant(value=1),
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value=1)])),
        Assert(
            test=Compare(
                left=Subscript(
                    value=Name(id='a', ctx=Load()),
                    slice=Slice(
                        lower=Constant(value=0),
                        upper=Constant(value=2)),
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=0),
                            Constant(value=2)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Subscript(
                    value=Name(id='a', ctx=Load()),
                    slice=Tuple(
                        elts=[
                            Constant(value=0),
                            Slice(
                                lower=Constant(value=1),
                                upper=Constant(value=2))],
                        ctx=Load()),
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Tuple(
                        elts=[
                            Constant(value=0),
                            Call(
                                func=Name(id='slice', ctx=Load()),
                                args=[
                                    Constant(value=1),
                                    Constant(value=2)],
                                keywords=[])],
                        ctx=Load())])),
        Assert(
            test=Compare(
                left=Subscript(
                    value=Name(id='a', ctx=Load()),
                    slice=Tuple(
                        elts=[
                            Slice(
                                lower=Constant(value=0),
                                upper=Constant(value=2)),
                            Slice(
                                lower=Constant(value=2),
                                upper=Constant(value=30),
                                step=Constant(value=1))],
                        ctx=Load()),
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Tuple(
                        elts=[
                            Call(
                                func=Name(id='slice', ctx=Load()),
                                args=[
                                    Constant(value=0),
                                    Constant(value=2)],
                                keywords=[]),
                            Call(
                                func=Name(id='slice', ctx=Load()),
                                args=[
                                    Constant(value=2),
                                    Constant(value=30),
                                    Constant(value=1)],
                                keywords=[])],
                        ctx=Load())])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=0),
                        Constant(value=2)],
                    keywords=[]),
                ops=[
                    Eq()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=0),
                            Constant(value=2)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=0),
                        Constant(value=2)],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=1),
                            Constant(value=2)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=0),
                        Constant(value=2)],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=1),
                            Constant(value=1)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=2)],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=0),
                            Constant(value=2)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=1),
                        Constant(value=2)],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=1),
                            Constant(value=2),
                            Constant(value=3)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=1),
                        Constant(value=2),
                        Constant(value=3)],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=1),
                            Constant(value=2),
                            Constant(value=4)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=1),
                        UnaryOp(
                            op=USub(),
                            operand=Constant(value=1))],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=1),
                            Constant(value=1)],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Call(
                    func=Name(id='slice', ctx=Load()),
                    args=[
                        Constant(value=0),
                        Constant(value=1)],
                    keywords=[]),
                ops=[
                    Lt()],
                comparators=[
                    Call(
                        func=Name(id='slice', ctx=Load()),
                        args=[
                            Constant(value=1),
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=1))],
                        keywords=[])])),
        Assert(
            test=Compare(
                left=Subscript(
                    value=Name(id='a', ctx=Load()),
                    slice=Constant(value='foo'),
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value='foo')])),
        Assert(
            test=Compare(
                left=Attribute(
                    value=Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(
                            lower=Constant(value='foo'),
                            upper=Tuple(
                                elts=[
                                    Constant(value=1),
                                    Constant(value=2)],
                                ctx=Load()),
                            step=Constant(value=True)),
                        ctx=Load()),
                    attr='start',
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value='foo')])),
        Assert(
            test=Compare(
                left=Attribute(
                    value=Subscript(
                        value=Name(id='a', ctx=Load()),
                        slice=Slice(
                            lower=Constant(value='foo'),
                            upper=Tuple(
                                elts=[
                                    Constant(value=1),
                                    Constant(value=2)],
                                ctx=Load()),
                            step=Constant(value=True)),
                        ctx=Load()),
                    attr='stop',
                    ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Tuple(
                        elts=[
                            Constant(value=1),
                            Constant(value=2)],
                        ctx=Load())])),
        Assert(
            test=Attribute(
                value=Subscript(
                    value=Name(id='a', ctx=Load()),
                    slice=Slice(
                        lower=Constant(value='foo'),
                        upper=Tuple(
                            elts=[
                                Constant(value=1),
                                Constant(value=2)],
                            ctx=Load()),
                        step=Constant(value=True)),
                    ctx=Load()),
                attr='step',
                ctx=Load()))],
    type_ignores=[])