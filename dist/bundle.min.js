var Ei = Object.defineProperty;
var gi = Object.getOwnPropertyDescriptor;
var l = (i, t, e, r) => {
    for (var s = r > 1 ? void 0 : r ? gi(t, e) : t, n = i.length - 1, a; n >= 0; n--)
        (a = i[n]) && (s = (r ? a(t, e, s) : a(s)) || s);
    return r && s && Ei(t, e, s), s;
};
var $e =
        "a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C3\\uA7C8\\uA7CA\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A",
    Je =
        "\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uAB69\\uFF70\\uFF9E\\uFF9F",
    Ze =
        "\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1100-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC",
    Pe = "\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC",
    Ge =
        "A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7F5\\uFF21-\\uFF3A",
    wi =
        "\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F",
    yi =
        "0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19",
    tr = "\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF",
    Ci =
        "\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D58-\\u0D5E\\u0D70-\\u0D78\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835",
    Fi = Ge + $e + Pe + Je + wi + Ze,
    bi = yi + tr + Ci,
    ls = "_" + Fi + bi;
var Di = "_",
    Bi = "\\u1885-\\u1886\\u2118\\u212E\\u309B-\\u309C",
    Ti = Ge + $e + Pe + Je + Ze + tr + Di + Bi,
    Ri = /^[A-Za-z_]$/,
    Si = /^[\\\/(){}\[\].!%&*=+,-><:;@^~]$/,
    vi = new RegExp("^[" + Ti + "]$");
function os(i) {
    return Ri.test(i) || (!Si.test(i) && vi.test(i.normalize("NFKC")));
}
var Ii = /^\s+$/;
function _s(i) {
    return Ii.test(i);
}
var c;
(function (i) {
    (i[(i.ENDMARKER = 0)] = "ENDMARKER"),
        (i[(i.NAME = 1)] = "NAME"),
        (i[(i.NUMBER = 2)] = "NUMBER"),
        (i[(i.STRING = 3)] = "STRING"),
        (i[(i.NEWLINE = 4)] = "NEWLINE"),
        (i[(i.INDENT = 5)] = "INDENT"),
        (i[(i.DEDENT = 6)] = "DEDENT"),
        (i[(i.LPAR = 7)] = "LPAR"),
        (i[(i.RPAR = 8)] = "RPAR"),
        (i[(i.LSQB = 9)] = "LSQB"),
        (i[(i.RSQB = 10)] = "RSQB"),
        (i[(i.COLON = 11)] = "COLON"),
        (i[(i.COMMA = 12)] = "COMMA"),
        (i[(i.SEMI = 13)] = "SEMI"),
        (i[(i.PLUS = 14)] = "PLUS"),
        (i[(i.MINUS = 15)] = "MINUS"),
        (i[(i.STAR = 16)] = "STAR"),
        (i[(i.SLASH = 17)] = "SLASH"),
        (i[(i.VBAR = 18)] = "VBAR"),
        (i[(i.AMPER = 19)] = "AMPER"),
        (i[(i.LESS = 20)] = "LESS"),
        (i[(i.GREATER = 21)] = "GREATER"),
        (i[(i.EQUAL = 22)] = "EQUAL"),
        (i[(i.DOT = 23)] = "DOT"),
        (i[(i.PERCENT = 24)] = "PERCENT"),
        (i[(i.LBRACE = 25)] = "LBRACE"),
        (i[(i.RBRACE = 26)] = "RBRACE"),
        (i[(i.EQEQUAL = 27)] = "EQEQUAL"),
        (i[(i.NOTEQUAL = 28)] = "NOTEQUAL"),
        (i[(i.LESSEQUAL = 29)] = "LESSEQUAL"),
        (i[(i.GREATEREQUAL = 30)] = "GREATEREQUAL"),
        (i[(i.TILDE = 31)] = "TILDE"),
        (i[(i.CIRCUMFLEX = 32)] = "CIRCUMFLEX"),
        (i[(i.LEFTSHIFT = 33)] = "LEFTSHIFT"),
        (i[(i.RIGHTSHIFT = 34)] = "RIGHTSHIFT"),
        (i[(i.DOUBLESTAR = 35)] = "DOUBLESTAR"),
        (i[(i.PLUSEQUAL = 36)] = "PLUSEQUAL"),
        (i[(i.MINEQUAL = 37)] = "MINEQUAL"),
        (i[(i.STAREQUAL = 38)] = "STAREQUAL"),
        (i[(i.SLASHEQUAL = 39)] = "SLASHEQUAL"),
        (i[(i.PERCENTEQUAL = 40)] = "PERCENTEQUAL"),
        (i[(i.AMPEREQUAL = 41)] = "AMPEREQUAL"),
        (i[(i.VBAREQUAL = 42)] = "VBAREQUAL"),
        (i[(i.CIRCUMFLEXEQUAL = 43)] = "CIRCUMFLEXEQUAL"),
        (i[(i.LEFTSHIFTEQUAL = 44)] = "LEFTSHIFTEQUAL"),
        (i[(i.RIGHTSHIFTEQUAL = 45)] = "RIGHTSHIFTEQUAL"),
        (i[(i.DOUBLESTAREQUAL = 46)] = "DOUBLESTAREQUAL"),
        (i[(i.DOUBLESLASH = 47)] = "DOUBLESLASH"),
        (i[(i.DOUBLESLASHEQUAL = 48)] = "DOUBLESLASHEQUAL"),
        (i[(i.AT = 49)] = "AT"),
        (i[(i.ATEQUAL = 50)] = "ATEQUAL"),
        (i[(i.RARROW = 51)] = "RARROW"),
        (i[(i.ELLIPSIS = 52)] = "ELLIPSIS"),
        (i[(i.COLONEQUAL = 53)] = "COLONEQUAL"),
        (i[(i.OP = 54)] = "OP"),
        (i[(i.AWAIT = 55)] = "AWAIT"),
        (i[(i.ASYNC = 56)] = "ASYNC"),
        (i[(i.TYPE_IGNORE = 57)] = "TYPE_IGNORE"),
        (i[(i.TYPE_COMMENT = 58)] = "TYPE_COMMENT"),
        (i[(i.ERRORTOKEN = 59)] = "ERRORTOKEN"),
        (i[(i.COMMENT = 60)] = "COMMENT"),
        (i[(i.NL = 61)] = "NL"),
        (i[(i.ENCODING = 62)] = "ENCODING"),
        (i[(i.N_TOKENS = 63)] = "N_TOKENS");
})(c || (c = {}));
var hs = 0,
    ms = 1,
    ps = 2,
    cs = 3,
    ks = 4,
    fs = 5,
    er = 6,
    xs = 23,
    ds = 52;
var As = 59,
    Es = 60,
    gs = 61,
    rr = new Map([
        ["!=", 28],
        ["%", 24],
        ["%=", 40],
        ["&", 19],
        ["&=", 41],
        ["(", 7],
        [")", 8],
        ["*", 16],
        ["**", 35],
        ["**=", 46],
        ["*=", 38],
        ["+", 14],
        ["+=", 36],
        [",", 12],
        ["-", 15],
        ["-=", 37],
        ["->", 51],
        [".", 23],
        ["...", 52],
        ["/", 17],
        ["//", 47],
        ["//=", 48],
        ["/=", 39],
        [":", 11],
        [":=", 53],
        [";", 13],
        ["<", 20],
        ["<<", 33],
        ["<<=", 44],
        ["<=", 29],
        ["=", 22],
        ["==", 27],
        [">", 21],
        [">=", 30],
        [">>", 34],
        [">>=", 45],
        ["@", 49],
        ["@=", 50],
        ["[", 9],
        ["]", 10],
        ["^", 32],
        ["^=", 43],
        ["{", 25],
        ["|", 18],
        ["|=", 42],
        ["}", 26],
        ["~", 31],
    ]);
var d = class extends SyntaxError {
    constructor(t, e) {
        super(t);
        this.traceback = e;
    }
    get [Symbol.toStringTag]() {
        return this.constructor._name;
    }
    get name() {
        return this.constructor._name;
    }
};
d._name = "SyntaxError";
var nt = class extends d {};
nt._name = "IndentationError";
var F = class {
        constructor(t, e, r, s, n) {
            (this.type = t), (this.string = e), (this.start = r), (this.end = s), (this.line = n);
        }
        get lineno() {
            return this.start[0];
        }
        get col_offset() {
            return this.start[1];
        }
        get [Symbol.toStringTag]() {
            return "TokenInfo";
        }
    },
    ws = /[\\^$.*+?()[\]{}|]/g,
    Ni = RegExp(ws.source);
function Li(i) {
    return i && Ni.test(i) ? i.replace(ws, "\\$&") : i;
}
var Oi = (...i) => "(" + i.join("|") + ")",
    q = (...i) => "(?:" + i.join("|") + ")",
    Xi = (...i) => q(...i) + "?";
function Ui(i, t) {
    let e;
    for (e = i.length; e > 0 && t.indexOf(i.charAt(e - 1)) !== -1; --e);
    return i.substring(0, e);
}
var Mi = "[ \\f\\t]*",
    qi = "#[^\\r\\n]*",
    Ki = "[" + ls + "]+",
    ys = "[eE][-+]?[0-9](?:_?[0-9])*",
    zi = q("[0-9](?:_?[0-9])*\\.(?:[0-9](?:_?[0-9])*)?", "\\.[0-9](?:_?[0-9])*") + Xi(ys),
    Qi = "[0-9](?:_?[0-9])*" + ys,
    De = q(zi, Qi),
    Wi = q("[0-9](?:_?[0-9])*[jJ]", De + "[jJ]"),
    Cs = [
        "",
        "FR",
        "RF",
        "Br",
        "BR",
        "Fr",
        "r",
        "B",
        "R",
        "b",
        "bR",
        "f",
        "rb",
        "rB",
        "F",
        "Rf",
        "U",
        "rF",
        "u",
        "RB",
        "br",
        "fR",
        "fr",
        "rf",
        "Rb",
    ],
    Be = q(...Cs),
    Vi = "^[^'\\\\]*(?:\\\\.[^'\\\\]*)*'",
    Hi = '^[^"\\\\]*(?:\\\\.[^"\\\\]*)*"',
    ji = "^[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*'''",
    Yi = '^[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*"""',
    $i = q(Be + "'''", Be + '"""'),
    Ji = [...rr.keys()].sort(),
    Zi = q(...Ji.reverse().map((i) => Li(i))),
    Pi = q("\\r?\\n", Zi),
    Gi = q(
        Be + "'[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*" + q("'", "\\\\\\r?\\n"),
        Be + '"[^\\n"\\\\]*(?:\\\\.[^\\n"\\\\]*)*' + q('"', "\\\\\\r?\\n")
    ),
    tn = q("\\\\\\r?\\n|$", qi, $i),
    lt = {},
    Fs = Cs;
for (let i of Fs)
    (lt[i + "'"] = new RegExp(Vi)),
        (lt[i + '"'] = new RegExp(Hi)),
        (lt[i + "'''"] = new RegExp(ji)),
        (lt[i + '"""'] = new RegExp(Yi));
var Te = new Set(),
    sr = new Set();
for (let i of Fs) Te.add(i + '"'), Te.add(i + "'"), sr.add(i + '"""'), sr.add(i + "'''");
var bs = 8,
    en = "0[xX](?:_?[0-9a-fA-F])+",
    rn = "0[bB](?:_?[01])+",
    sn = "0[oO](?:_?[0-7])+",
    nn = "(?:0(?:_?0)*|[1-9](?:_?[0-9])*)",
    un = q(en, rn, sn, nn),
    an = q(Wi, De, un),
    ln = Mi + Oi(tn, an, Pi, Gi, Ki),
    on = new RegExp(ln),
    Ds = "<unknown>";
function ir(i, t = Ds) {
    return _n(i, t);
}
function* _n(i, t = Ds) {
    let e = 0,
        r = 0,
        s = 0,
        n = "",
        a = 0,
        _ = null,
        h = [0],
        m = / /g,
        k = [0, 0],
        x = "",
        p = "";
    for (;;) {
        (x = p), (p = i.next().value || ""), (e += 1);
        let f = 0,
            it = p.length;
        if (n) {
            if (!p)
                throw (
                    (yield new F(c.ERRORTOKEN, "EOF in multi-line statement", [e, f], [e, f], p),
                    new d("EOF in multi-line string", [t, ...k, x]))
                );
            m.lastIndex = 0;
            let T = m.exec(p);
            if (T !== null) {
                let H = (f = T[0].length);
                yield new F(c.STRING, n + p.substring(0, H), k, [e, H], _ + p), (n = ""), (a = 0), (_ = null);
            } else if (
                a &&
                p.substring(p.length - 2) !==
                    `\\
` &&
                p.substring(p.length - 3) !==
                    `\\\r
`
            ) {
                yield new F(c.ERRORTOKEN, n + p, k, [e, p.length], _), (n = ""), (_ = null);
                continue;
            } else {
                (n = n + p), (_ = _ + p);
                continue;
            }
        } else if (r === 0 && !s) {
            if (!p) break;
            let T = 0;
            for (; f < it; ) {
                let j = p[f];
                if (j === " ") T += 1;
                else if (j === "	") T = Math.floor(T / bs + 1) * bs;
                else if (j === "\f") T = 0;
                else break;
                f += 1;
            }
            if (f === it) break;
            let H = p[f];
            if (
                H === "#" ||
                H === "\r" ||
                H ===
                    `
`
            ) {
                if (H === "#") {
                    let j = Ui(
                        p.substring(f),
                        `\r
`
                    );
                    yield new F(c.COMMENT, j, [e, f], [e, f + j.length], p), (f += j.length);
                }
                yield new F(c.NL, p.substring(f), [e, f], [e, p.length], p);
                continue;
            }
            for (
                T > h[h.length - 1] && (h.push(T), yield new F(c.INDENT, p.substring(f), [e, 0], [e, f], p));
                T < h[h.length - 1];

            ) {
                if (!h.includes(T)) throw new nt("unindent does not match any outer indentation level", [t, e, f, p]);
                (h = h.slice(0, -1)), yield new F(c.DEDENT, "", [e, f], [e, f], p);
            }
        } else {
            if (!p)
                throw (
                    (yield new F(c.ERRORTOKEN, "EOF in multi-line statement", [e, f], [e, f], p),
                    new d("EOF in multi-line statement", [t, e, 0, x]))
                );
            s = 0;
        }
        for (; f < it; ) {
            let T = p[f];
            for (; T === " " || T === "\f" || T === "	"; ) T = p[++f];
            let H = on.exec(p.substring(f)),
                j = !1;
            if (H !== null) {
                let A = f,
                    Fe = A + H[1].length,
                    J = [e, A],
                    P = [e, Fe];
                if (((f = Fe), A === Fe)) continue;
                let C = p.substring(A, Fe),
                    E = p[A];
                if (
                    (E === "." && C !== "." && C !== "...") ||
                    E === "0" ||
                    E === "1" ||
                    E === "2" ||
                    E === "3" ||
                    E === "4" ||
                    E === "5" ||
                    E === "6" ||
                    E === "7" ||
                    E === "8" ||
                    E === "9"
                )
                    yield new F(c.NUMBER, C, J, P, p);
                else if (
                    E === "\r" ||
                    E ===
                        `
`
                )
                    r > 0 ? yield new F(c.NL, C, J, P, p) : yield new F(c.NEWLINE, C, J, P, p);
                else if (E === "#") yield new F(c.COMMENT, C, J, P, p);
                else if (
                    C === "'''" ||
                    C === '"""' ||
                    ((j =
                        E === "f" ||
                        E === "r" ||
                        E === "b" ||
                        E === "u" ||
                        E === "F" ||
                        E === "R" ||
                        E === "B" ||
                        E === "U") &&
                        sr.has(C))
                ) {
                    m = lt[C];
                    let be = m.exec(p.substring(f));
                    if (be !== null)
                        (f = be[0].length + f), (C = p.substring(A, f)), yield new F(c.STRING, C, J, [e, f], p);
                    else {
                        (k = [e, A]), (n = p.substring(A)), (_ = p);
                        break;
                    }
                } else if (E === "'" || E === '"' || (j && (Te.has(C.substring(0, 2)) || Te.has(C.substring(0, 3)))))
                    if (
                        C[C.length - 1] ===
                        `
`
                    ) {
                        (k = [e, A]), (m = lt[E] || lt[C[1]] || lt[C[2]]), (n = p.substring(A)), (a = 1), (_ = p);
                        break;
                    } else yield new F(c.STRING, C, J, P, p);
                else if (E === "a")
                    C === "async"
                        ? yield new F(c.ASYNC, C, J, P, p)
                        : C === "await"
                        ? yield new F(c.AWAIT, C, J, P, p)
                        : yield new F(c.NAME, C, J, P, p);
                else if (j || os(E)) yield new F(c.NAME, C, J, P, p);
                else if (E === "\\") s = 1;
                else {
                    E === "(" || E === "[" || E === "{" ? (r += 1) : (E === ")" || E === "]" || E === "}") && (r -= 1);
                    let be = rr.get(C) || c.OP;
                    yield new F(be, C, J, P, p);
                }
            } else yield new F(c.ERRORTOKEN, p[f], [e, f], [e, f + 1], p), (f += 1);
        }
    }
    x &&
        !`\r
`.includes(x[x.length - 1]) &&
        (yield new F(c.NEWLINE, "", [e - 1, x.length], [e - 1, x.length + 1], ""));
    for (let f in h.slice(1)) yield new F(c.DEDENT, "", [e, 0], [e, 0], "");
    yield new F(c.ENDMARKER, "", [e, 0], [e, 0], "");
}
var Re = class {
    constructor(t) {
        (this._gen = t), (this._tokens = []), (this._fmode = !1), (this._lineno = 0), (this._offset = 0);
    }
    _adjust_offset(t) {
        let e = t.start,
            r = t.end;
        e[0] === 1 && ((e[1] += this._offset), r[0] === 1 && (r[1] += this._offset)),
            (e[0] += this._lineno),
            (r[0] += this._lineno);
    }
    getnext() {
        for (;;) {
            let t = this._gen.next().value,
                e = t.type;
            if (!(e === gs || e === Es) && !(e === As && _s(t.string)))
                return this._fmode && this._adjust_offset(t), this._tokens.push(t), t;
        }
    }
    set starting_lineno(t) {
        (this._lineno = t), (this._fmode = t === 0 ? this._fmode : !0);
    }
    set starting_col_offset(t) {
        (this._offset = t), (this._fmode = t === 0 ? this._fmode : !0);
    }
};
var hn = /^.*$/gm;
function* Bs(i) {
    for (let t of i.matchAll(hn))
        yield t[0] +
            `
`;
}
function Se(i, t = "<string>") {
    return new Re(ir(Bs(i), t));
}
var b = class {
    get [Symbol.toStringTag]() {
        return this.constructor._name;
    }
};
b._name = "AST";
b.prototype._attributes = [];
b.prototype._fields = [];
b.prototype._enum = !1;
var Gt = ["lineno", "col_offset", "end_lineno", "end_col_offset"],
    Lt = class extends b {};
Lt._name = "expr_context";
Lt.prototype._enum = !0;
var nr = class extends Lt {};
nr._name = "Load";
var ur = class extends Lt {};
ur._name = "Store";
var ar = class extends Lt {};
ar._name = "Del";
var B = new nr(),
    D = new ur(),
    dt = new ar(),
    te = class extends b {};
te._name = "boolop";
te.prototype._enum = !0;
var lr = class extends te {};
lr._name = "And";
var or = class extends te {};
or._name = "Or";
var Ts = new lr(),
    Rs = new or(),
    N = class extends b {};
N._name = "operator";
N.prototype._enum = !0;
var _r = class extends N {};
_r._name = "Add";
var hr = class extends N {};
hr._name = "Sub";
var mr = class extends N {};
mr._name = "Mult";
var pr = class extends N {};
pr._name = "MatMult";
var cr = class extends N {};
cr._name = "Div";
var kr = class extends N {};
kr._name = "Mod";
var fr = class extends N {};
fr._name = "Pow";
var xr = class extends N {};
xr._name = "LShift";
var dr = class extends N {};
dr._name = "RShift";
var Ar = class extends N {};
Ar._name = "BitOr";
var Er = class extends N {};
Er._name = "BitXor";
var gr = class extends N {};
gr._name = "BitAnd";
var wr = class extends N {};
wr._name = "FloorDiv";
var yr = new _r(),
    Cr = new hr(),
    Fr = new mr(),
    br = new pr(),
    Dr = new cr(),
    Br = new kr(),
    Tr = new fr(),
    Rr = new xr(),
    Sr = new dr(),
    vr = new Ar(),
    Ir = new Er(),
    Nr = new gr(),
    Lr = new wr(),
    At = class extends b {};
At._name = "unaryop";
At.prototype._enum = !0;
var Or = class extends At {};
Or._name = "Invert";
var Xr = class extends At {};
Xr._name = "Not";
var Ur = class extends At {};
Ur._name = "UAdd";
var Mr = class extends At {};
Mr._name = "USub";
var Ss = new Or(),
    vs = new Xr(),
    Is = new Ur(),
    Ns = new Mr(),
    K = class extends b {};
K._name = "cmpop";
K.prototype._enum = !0;
var qr = class extends K {};
qr._name = "Eq";
var Kr = class extends K {};
Kr._name = "NotEq";
var zr = class extends K {};
zr._name = "Lt";
var Qr = class extends K {};
Qr._name = "LtE";
var Wr = class extends K {};
Wr._name = "Gt";
var Vr = class extends K {};
Vr._name = "GtE";
var Hr = class extends K {};
Hr._name = "Is";
var jr = class extends K {};
jr._name = "IsNot";
var Yr = class extends K {};
Yr._name = "In";
var $r = class extends K {};
$r._name = "NotIn";
var Ls = new qr(),
    Os = new Kr(),
    Xs = new zr(),
    Us = new Qr(),
    Ms = new Wr(),
    qs = new Vr(),
    Ks = new Hr(),
    zs = new jr(),
    ve = new Yr(),
    Qs = new $r(),
    Ot = class extends b {};
Ot._name = "mod";
var ee = class extends Ot {
    constructor(t, e) {
        super();
        (this.body = t || []), (this.type_ignores = e || []);
    }
};
ee._name = "Module";
ee.prototype._fields = ["body", "type_ignores"];
var re = class extends Ot {
    constructor(t) {
        super();
        this.body = t || [];
    }
};
re._name = "Interactive";
re.prototype._fields = ["body"];
var se = class extends Ot {
    constructor(t) {
        super();
        this.body = t;
    }
};
se._name = "Expression";
se.prototype._fields = ["body"];
var ie = class extends Ot {
    constructor(t, e) {
        super();
        (this.argtypes = t || []), (this.returns = e);
    }
};
ie._name = "FunctionType";
ie.prototype._fields = ["argtypes", "returns"];
var y = class extends b {
    constructor(t, e, r, s) {
        super();
        (this.lineno = t), (this.col_offset = e), (this.end_lineno = r), (this.end_col_offset = s);
    }
};
y._name = "stmt";
y.prototype._attributes = Gt;
var ne = class extends y {
    constructor(t, e, r, s, n, a, ..._) {
        super(..._);
        (this.name = t),
            (this.args = e),
            (this.body = r || []),
            (this.decorator_list = s || []),
            (this.returns = n),
            (this.type_comment = a);
    }
};
ne._name = "FunctionDef";
ne.prototype._fields = ["name", "args", "body", "decorator_list", "returns", "type_comment"];
var ue = class extends y {
    constructor(t, e, r, s, n, a, ..._) {
        super(..._);
        (this.name = t),
            (this.args = e),
            (this.body = r || []),
            (this.decorator_list = s || []),
            (this.returns = n),
            (this.type_comment = a);
    }
};
ue._name = "AsyncFunctionDef";
ue.prototype._fields = ["name", "args", "body", "decorator_list", "returns", "type_comment"];
var Et = class extends y {
    constructor(t, e, r, s, n, ...a) {
        super(...a);
        (this.name = t),
            (this.bases = e || []),
            (this.keywords = r || []),
            (this.body = s || []),
            (this.decorator_list = n || []);
    }
};
Et._name = "ClassDef";
Et.prototype._fields = ["name", "bases", "keywords", "body", "decorator_list"];
var ae = class extends y {
    constructor(t, ...e) {
        super(...e);
        this.value = t;
    }
};
ae._name = "Return";
ae.prototype._fields = ["value"];
var le = class extends y {
    constructor(t, ...e) {
        super(...e);
        this.targets = t || [];
    }
};
le._name = "Delete";
le.prototype._fields = ["targets"];
var oe = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.targets = t || []), (this.value = e), (this.type_comment = r);
    }
};
oe._name = "Assign";
oe.prototype._fields = ["targets", "value", "type_comment"];
var _e = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.target = t), (this.op = e), (this.value = r);
    }
};
_e._name = "AugAssign";
_e.prototype._fields = ["target", "op", "value"];
var Xt = class extends y {
    constructor(t, e, r, s, ...n) {
        super(...n);
        (this.target = t), (this.annotation = e), (this.value = r), (this.simple = s);
    }
};
Xt._name = "AnnAssign";
Xt.prototype._fields = ["target", "annotation", "value", "simple"];
var he = class extends y {
    constructor(t, e, r, s, n, ...a) {
        super(...a);
        (this.target = t), (this.iter = e), (this.body = r || []), (this.orelse = s || []), (this.type_comment = n);
    }
};
he._name = "For";
he.prototype._fields = ["target", "iter", "body", "orelse", "type_comment"];
var me = class extends y {
    constructor(t, e, r, s, n, ...a) {
        super(...a);
        (this.target = t), (this.iter = e), (this.body = r || []), (this.orelse = s || []), (this.type_comment = n);
    }
};
me._name = "AsyncFor";
me.prototype._fields = ["target", "iter", "body", "orelse", "type_comment"];
var pe = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.test = t), (this.body = e || []), (this.orelse = r || []);
    }
};
pe._name = "While";
pe.prototype._fields = ["test", "body", "orelse"];
var ot = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.test = t), (this.body = e || []), (this.orelse = r || []);
    }
};
ot._name = "If";
ot.prototype._fields = ["test", "body", "orelse"];
var Ut = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.items = t || []), (this.body = e || []), (this.type_comment = r);
    }
};
Ut._name = "With";
Ut.prototype._fields = ["items", "body", "type_comment"];
var Mt = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.items = t || []), (this.body = e || []), (this.type_comment = r);
    }
};
Mt._name = "AsyncWith";
Mt.prototype._fields = ["items", "body", "type_comment"];
var qt = class extends y {
    constructor(t, e, ...r) {
        super(...r);
        (this.exc = t), (this.cause = e);
    }
};
qt._name = "Raise";
qt.prototype._fields = ["exc", "cause"];
var Kt = class extends y {
    constructor(t, e, r, s, ...n) {
        super(...n);
        (this.body = t || []), (this.handlers = e || []), (this.orelse = r || []), (this.finalbody = s || []);
    }
};
Kt._name = "Try";
Kt.prototype._fields = ["body", "handlers", "orelse", "finalbody"];
var ce = class extends y {
    constructor(t, e, ...r) {
        super(...r);
        (this.test = t), (this.msg = e);
    }
};
ce._name = "Assert";
ce.prototype._fields = ["test", "msg"];
var ke = class extends y {
    constructor(t, ...e) {
        super(...e);
        this.names = t || [];
    }
};
ke._name = "Import";
ke.prototype._fields = ["names"];
var zt = class extends y {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.module = t), (this.names = e || []), (this.level = r);
    }
};
zt._name = "ImportFrom";
zt.prototype._fields = ["module", "names", "level"];
var fe = class extends y {
    constructor(t, ...e) {
        super(...e);
        this.names = t || [];
    }
};
fe._name = "Global";
fe.prototype._fields = ["names"];
var xe = class extends y {
    constructor(t, ...e) {
        super(...e);
        this.names = t || [];
    }
};
xe._name = "Nonlocal";
xe.prototype._fields = ["names"];
var Qt = class extends y {
    constructor(t, ...e) {
        super(...e);
        this.value = t;
    }
};
Qt._name = "Expr";
Qt.prototype._fields = ["value"];
var Wt = class extends y {
    constructor(...t) {
        super(...t);
    }
};
Wt._name = "Pass";
Wt.prototype._fields = [];
var de = class extends y {
    constructor(...t) {
        super(...t);
    }
};
de._name = "Break";
de.prototype._fields = [];
var Ae = class extends y {
    constructor(...t) {
        super(...t);
    }
};
Ae._name = "Continue";
Ae.prototype._fields = [];
var Jr = class extends y {
    constructor(...t) {
        super(...t);
    }
};
Jr._name = "Debugger";
Jr.prototype._fields = [];
var g = class extends b {
    constructor(t, e, r, s) {
        super();
        (this.lineno = t), (this.col_offset = e), (this.end_lineno = r), (this.end_col_offset = s);
    }
};
g._name = "expr";
g.prototype._attributes = Gt;
var _t = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.op = t), (this.values = e || []);
    }
};
_t._name = "BoolOp";
_t.prototype._fields = ["op", "values"];
var gt = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.target = t), (this.value = e);
    }
};
gt._name = "NamedExpr";
gt.prototype._fields = ["target", "value"];
var R = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.left = t), (this.op = e), (this.right = r);
    }
};
R._name = "BinOp";
R.prototype._fields = ["left", "op", "right"];
var G = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.op = t), (this.operand = e);
    }
};
G._name = "UnaryOp";
G.prototype._fields = ["op", "operand"];
var wt = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.args = t), (this.body = e);
    }
};
wt._name = "Lambda";
wt.prototype._fields = ["args", "body"];
var yt = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.test = t), (this.body = e), (this.orelse = r);
    }
};
yt._name = "IfExp";
yt.prototype._fields = ["test", "body", "orelse"];
var Ct = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.keys = t || []), (this.values = e || []);
    }
};
Ct._name = "Dict";
Ct.prototype._fields = ["keys", "values"];
var Ft = class extends g {
    constructor(t, ...e) {
        super(...e);
        this.elts = t || [];
    }
};
Ft._name = "Set";
Ft.prototype._fields = ["elts"];
var bt = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.elt = t), (this.generators = e || []);
    }
};
bt._name = "ListComp";
bt.prototype._fields = ["elt", "generators"];
var Dt = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.elt = t), (this.generators = e || []);
    }
};
Dt._name = "SetComp";
Dt.prototype._fields = ["elt", "generators"];
var Bt = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.key = t), (this.value = e), (this.generators = r || []);
    }
};
Bt._name = "DictComp";
Bt.prototype._fields = ["key", "value", "generators"];
var Tt = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.elt = t), (this.generators = e || []);
    }
};
Tt._name = "GeneratorExp";
Tt.prototype._fields = ["elt", "generators"];
var Rt = class extends g {
    constructor(t, ...e) {
        super(...e);
        this.value = t;
    }
};
Rt._name = "Await";
Rt.prototype._fields = ["value"];
var St = class extends g {
    constructor(t, ...e) {
        super(...e);
        this.value = t;
    }
};
St._name = "Yield";
St.prototype._fields = ["value"];
var vt = class extends g {
    constructor(t, ...e) {
        super(...e);
        this.value = t;
    }
};
vt._name = "YieldFrom";
vt.prototype._fields = ["value"];
var ht = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.left = t), (this.ops = e || []), (this.comparators = r || []);
    }
};
ht._name = "Compare";
ht.prototype._fields = ["left", "ops", "comparators"];
var z = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.func = t), (this.args = e || []), (this.keywords = r || []);
    }
};
z._name = "Call";
z.prototype._fields = ["func", "args", "keywords"];
var It = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.value = t), (this.conversion = e), (this.format_spec = r);
    }
};
It._name = "FormattedValue";
It.prototype._fields = ["value", "conversion", "format_spec"];
var Nt = class extends g {
    constructor(t, ...e) {
        super(...e);
        this.values = t || [];
    }
};
Nt._name = "JoinedStr";
Nt.prototype._fields = ["values"];
var L = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.value = t), (this.kind = e);
    }
};
L._name = "Constant";
L.prototype._fields = ["value", "kind"];
var O = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.value = t), (this.attr = e), (this.ctx = r);
    }
};
O._name = "Attribute";
O.prototype._fields = ["value", "attr", "ctx"];
var X = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.value = t), (this.slice = e), (this.ctx = r);
    }
};
X._name = "Subscript";
X.prototype._fields = ["value", "slice", "ctx"];
var Q = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.value = t), (this.ctx = e);
    }
};
Q._name = "Starred";
Q.prototype._fields = ["value", "ctx"];
var Y = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.id = t), (this.ctx = e);
    }
};
Y._name = "Name";
Y.prototype._fields = ["id", "ctx"];
var W = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.elts = t || []), (this.ctx = e);
    }
};
W._name = "List";
W.prototype._fields = ["elts", "ctx"];
var S = class extends g {
    constructor(t, e, ...r) {
        super(...r);
        (this.elts = t || []), (this.ctx = e);
    }
};
S._name = "Tuple";
S.prototype._fields = ["elts", "ctx"];
var Ee = class extends g {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.lower = t), (this.upper = e), (this.step = r);
    }
};
Ee._name = "Slice";
Ee.prototype._fields = ["lower", "upper", "step"];
var Vt = class extends b {
    constructor(t, e, r, s) {
        super();
        (this.target = t), (this.iter = e), (this.ifs = r || []), (this.is_async = s);
    }
};
Vt._name = "comprehension";
Vt.prototype._fields = ["target", "iter", "ifs", "is_async"];
var Ie = class extends b {
    constructor(t, e, r, s) {
        super();
        (this.lineno = t), (this.col_offset = e), (this.end_lineno = r), (this.end_col_offset = s);
    }
};
Ie._name = "excepthandler";
Ie.prototype._attributes = Gt;
var Ht = class extends Ie {
    constructor(t, e, r, ...s) {
        super(...s);
        (this.type = t), (this.name = e), (this.body = r || []);
    }
};
Ht._name = "ExceptHandler";
Ht.prototype._fields = ["type", "name", "body"];
var jt = class extends b {
    constructor(t, e, r, s, n, a, _) {
        super();
        (this.posonlyargs = t || []),
            (this.args = e || []),
            (this.vararg = r),
            (this.kwonlyargs = s || []),
            (this.kw_defaults = n || []),
            (this.kwarg = a),
            (this.defaults = _ || []);
    }
};
jt._name = "arguments";
jt.prototype._fields = ["posonlyargs", "args", "vararg", "kwonlyargs", "kw_defaults", "kwarg", "defaults"];
var ut = class extends b {
    constructor(t, e, r, s, n, a, _) {
        super();
        (this.arg = t),
            (this.annotation = e),
            (this.type_comment = r),
            (this.lineno = s),
            (this.col_offset = n),
            (this.end_lineno = a),
            (this.end_col_offset = _);
    }
};
ut._name = "arg";
ut.prototype._fields = ["arg", "annotation", "type_comment"];
ut.prototype._attributes = Gt;
var mt = class extends b {
    constructor(t, e, r, s, n, a) {
        super();
        (this.arg = t),
            (this.value = e),
            (this.lineno = r),
            (this.col_offset = s),
            (this.end_lineno = n),
            (this.end_col_offset = a);
    }
};
mt._name = "keyword";
mt.prototype._fields = ["arg", "value"];
mt.prototype._attributes = Gt;
var pt = class extends b {
    constructor(t, e) {
        super();
        (this.name = t), (this.asname = e);
    }
};
pt._name = "alias";
pt.prototype._fields = ["name", "asname"];
var Yt = class extends b {
    constructor(t, e) {
        super();
        (this.context_expr = t), (this.optional_vars = e);
    }
};
Yt._name = "withitem";
Yt.prototype._fields = ["context_expr", "optional_vars"];
var Zr = class extends b {};
Zr._name = "type_ignore";
var Pr = class extends Zr {
    constructor(t, e) {
        super();
        (this.lineno = t), (this.tag = e);
    }
};
Pr._name = "TypeIgnore";
Pr.prototype._fields = ["lineno", "tag"];
var $ = class {
        constructor(t, e) {
            (this.cmpop = t), (this.expr = e);
        }
    },
    Ne = class {
        constructor(t, e) {
            (this.key = t), (this.value = e);
        }
    },
    U = class {
        constructor(t) {
            this.kind = t;
        }
    },
    Gr = class {
        constructor(t, e) {
            (this.arg = t), (this.value = e);
        }
    },
    $t = class {
        constructor(t, e) {
            (this.plain_names = t), (this.names_with_defaults = e);
        }
    },
    ct = class {
        constructor(t, e, r) {
            (this.vararg = t), (this.kwonlyargs = e), (this.kwarg = r);
        }
    },
    Jt = class {
        constructor(t, e) {
            (this.element = t), (this.is_keyword = e);
        }
    },
    tt;
(function (i) {
    (i[(i.STAR_TARGETS = 0)] = "STAR_TARGETS"),
        (i[(i.DEL_TARGETS = 1)] = "DEL_TARGETS"),
        (i[(i.FOR_TARGETS = 2)] = "FOR_TARGETS");
})(tt || (tt = {}));
var ts = 0,
    Ws = 1,
    Vs = 2,
    v;
(function (i) {
    (i[(i.SINGLE_INPUT = 256)] = "SINGLE_INPUT"),
        (i[(i.FILE_INPUT = 257)] = "FILE_INPUT"),
        (i[(i.EVAL_INPUT = 258)] = "EVAL_INPUT"),
        (i[(i.FUNC_TYPE_INPUT = 345)] = "FUNC_TYPE_INPUT"),
        (i[(i.FSTRING_INPUT = 800)] = "FSTRING_INPUT");
})(v || (v = {}));
function kt(i, t) {
    return (t ??= i), [i.lineno, i.col_offset, t.end_lineno, t.end_col_offset];
}
var mn = /[^\x00-\x7F]/;
function js(i, t) {
    let e = t.string,
        r = e[0],
        s = !1,
        n = !1,
        a = !1,
        _ = 0;
    if (r !== "'" && r !== '"')
        for (;;)
            if (r === "b" || r === "B") (r = e[++_]), (n = !0);
            else if (r === "u" || r === "U") r = e[++_];
            else if (r === "r" || r === "R") (r = e[++_]), (a = !0);
            else if (r === "f" || r === "F") (r = e[++_]), (s = !0);
            else break;
    return (
        e.length >= 6 + _ && e[_ + 1] === r && e[_ + 2] === r ? (e = e.slice(_ + 3, -3)) : (e = e.slice(_ + 1, -1)),
        s
            ? [e, s, n, a]
            : (n && mn.test(e) && i.raise_error(d, "bytes can only contain ASCII literal characters."),
              (a ||= !e.includes("\\")),
              a ? [e, s, n, a] : [Hs(i, e), s, n, a])
    );
}
function Hs(i, t) {
    let e,
        r = t.length,
        s = "";
    for (let n = 0; n < r; n++)
        (e = t[n]),
            e === "\\"
                ? ((e = t[++n]),
                  e === "n"
                      ? (s += `
`)
                      : e === "\\"
                      ? (s += "\\")
                      : e === "t"
                      ? (s += "	")
                      : e === "r"
                      ? (s += "\r")
                      : e === "b"
                      ? (s += "\b")
                      : e === "f"
                      ? (s += "\f")
                      : e === "v"
                      ? (s += "\v")
                      : e === "0"
                      ? (s += "\0")
                      : e === '"'
                      ? (s += '"')
                      : e === "'"
                      ? (s += "'")
                      : e ===
                            `
` ||
                        (e === "x"
                            ? (n + 2 >= r && i.raise_error(d, "Truncated \\xNN escape"),
                              (s += String.fromCharCode(parseInt(t.substr(n + 1, 2), 16))),
                              (n += 2))
                            : e === "u"
                            ? (n + 4 >= r && i.raise_error(d, "Truncated \\uXXXX escape"),
                              (s += String.fromCharCode(parseInt(t.substr(n + 1, 4), 16))),
                              (n += 4))
                            : e === "U"
                            ? (n + 8 >= r && i.raise_error(d, "Truncated \\UXXXXXXXX escape"),
                              (s += String.fromCodePoint(parseInt(t.substr(n + 1, 8), 16))),
                              (n += 8))
                            : (s += "\\" + e)))
                : (s += e);
    return s;
}
var pn = /\n/g;
function cn(i, t, e) {
    let r = i.start[0],
        s = i.start[1],
        n = [...t.substring(0, e).matchAll(pn)],
        a = n.length;
    return a === 0 ? ((s += i.string.indexOf(t)), (s += e)) : ((s = e - n[a - 1].index), (r += a)), [r, s];
}
function ge(i) {
    i.raise_error(d, "f-string: expecting '}'");
}
var Ys = /^\s*$/;
function kn(i, t, e, r, s) {
    M(r >= e), M(t[e - 1] === "{");
    let n = t[r];
    M(n === "}" || n === "!" || n === ":" || n === "=");
    let a = t.substring(e, r);
    Ys.test(a) && i.raise_error(d, "f-string: empty expression not allowed");
    let [_, h] = cn(s, t, e);
    a = "(" + a + ")";
    let m = Se(a, i.filename);
    (m.starting_lineno = _ - 1), (m.starting_col_offset = h - 1);
    let k = new u(m, v.FSTRING_INPUT);
    return (k.filename = i.filename), k.parse();
}
function xn(i, t, e, r, s, n, a) {
    n >= 2 && i.raise_error(d, "f-string: expressions nested too deeply");
    let _ = e;
    M(t[_] === "{"), _++;
    let h = _,
        m = null,
        k = 0,
        x = 0,
        p = null,
        f = null,
        it = null;
    for (M(_ <= r); _ < r; _++) {
        let A = t[_];
        if ((A === "\\" && i.raise_error(d, "f-string expression part cannot include a backslash"), m !== null)) {
            if (A === m)
                if (k === 3) {
                    if (_ + 2 < r && t[_ + 1] === A && t[_ + 2] === A) {
                        (_ += 2), (k = 0), (m = null);
                        continue;
                    }
                } else {
                    (m = null), (k = 0);
                    continue;
                }
        } else if (A === "'" || A === '"')
            _ + 2 < r && t[_ + 1] === A && t[_ + 2] === A ? ((k = 3), (_ += 2)) : (k = 1), (m = A);
        else if (A === "[" || A === "{" || A === "(") x++;
        else if (x !== 0 && (A === "]" || A === "}" || A === ")")) x--;
        else if (A === "#") i.raise_error(d, "f-string expression part cannot include '#'");
        else if (x === 0 && (A === "!" || A === ":" || A === "}" || A === "=" || A === "<" || A === ">")) {
            if (_ + 1 < r) {
                if (t[_ + 1] === "=" && (A === "!" || A === "=" || A === "<" || A === ">")) {
                    _++;
                    continue;
                }
                if (A === ">" || A === "<") continue;
            }
            break;
        }
    }
    m && i.raise_error(d, "f-string: unterminated string"),
        x && i.raise_error(d, "f-string: mismatched '(', '{', or '['");
    let T = _;
    h >= T && ge(i);
    let H = kn(i, t, h, T, a);
    if (t[_] === "=") {
        for (_++; Ys.test(t[_]); ) _++;
        it = t.slice(h, _);
    }
    return (
        t[_] === "!" &&
            (_++,
            _ >= r && ge(i),
            (f = t[_]),
            _++,
            f === "s" ||
                f === "r" ||
                f === "a" ||
                i.raise_error(d, "f-string: invalid conversion character: expected 's', 'r', or 'a'")),
        _ >= r && ge(i),
        t[_] === ":" && (_++, _ >= r && ge(i), ([p, _] = fn(i, t, _, r, s, n + 1, this.first, a, this.last))),
        (_ >= r || t[_] !== "}") && ge(i),
        _++,
        it && p === null && f === null && (f = "r"),
        [new It(H, f === null ? -1 : f.charCodeAt(0), p, this.a0, this.a1, this.a2, this.a3), _, it]
    );
}
var dn = /(^|[^}])}(}})*($|[^}])/,
    An = /}}/g;
function En(i, t, e, r, s, n) {
    let a = this.parser,
        _ = t,
        h = (m) => {
            m.includes("}") &&
                (dn.test(m) && a.raise_error(d, "f-string: single '}' is not allowed"), (m = m.replace(An, "}"))),
                !r && m.includes("\\") && (m = Hs(a, m)),
                this.concat(m);
        };
    for (; _ < e; ) {
        let m = i.indexOf("{", _);
        if (s !== 0) {
            let k = i.indexOf("}", _);
            k !== -1 && (m === -1 ? (e = k) : m > k && ((m = -1), (e = k)));
        }
        if (m === -1) {
            h(i.substring(_, e)), (_ = e);
            break;
        } else if (m + 1 < e && i[m + 1] === "{") {
            h(i.substring(_, m + 1)), (_ = m + 2);
            continue;
        } else {
            h(i.substring(_, m)), (_ = m);
            let [k, x, p] = xn.call(this, a, i, m, e, r, s, n);
            p !== null && this.concat(p),
                this.last_str && (this.expr_list.push(this.mkStrNode(this.last_str)), (this.last_str = "")),
                this.expr_list.push(k),
                (_ = x);
        }
    }
    return _;
}
var Oe = class {
    constructor(t, e, r) {
        (this.parser = t),
            (this.last_str = ""),
            (this.fmode = !1),
            (this.expr_list = []),
            (this.first = e),
            (this.last = r),
            (this.a0 = e.start[0]),
            (this.a1 = e.start[1]),
            (this.a2 = r.end[0]),
            (this.a3 = r.end[1]),
            (this.kind = e.string[0] === "u" ? "u" : null);
    }
    concatFstring(t, e, r, s, n, a) {
        return (this.fmode = !0), En.call(this, t, e, r, s, n, a);
    }
    concat(t) {
        this.last_str += t;
    }
    mkStrNode(t) {
        return new L(new Le(t), this.kind, this.a0, this.a1, this.a2, this.a3);
    }
    finish() {
        return this.fmode
            ? (this.last_str && this.expr_list.push(this.mkStrNode(this.last_str)),
              new Nt(this.expr_list, this.a0, this.a1, this.a2, this.a3))
            : (M(this.expr_list.length === 0), this.mkStrNode(this.last_str));
    }
};
function fn(i, t, e, r, s, n, a, _, h) {
    let m = new Oe(i, a, h),
        k = m.concatFstring(t, e, r, s, n, _);
    return [m.finish(), k];
}
var $s = class extends Error {
    constructor(t) {
        super(t);
        this.name = "AssertionError";
    }
};
function M(i, t = "") {
    if (!i) throw new $s(t);
}
function ft(i, t) {
    return t === null ? null : gn(t.string);
}
function gn(i) {
    return i;
}
function ze(i, t, e) {
    return e === null
        ? t
        : new ut(t.arg, t.annotation, e.string, t.lineno, t.col_offset, t.end_lineno, t.end_col_offset);
}
function wn(i) {
    return i;
}
function yn(i) {
    return wn("");
}
function Zt(i) {
    switch ((M(i != null), i.constructor)) {
        case O:
        case X:
        case Q:
        case Y:
        case W:
        case S:
        case wt:
            return i[Symbol.toStringTag].toLowerCase();
        case z:
            return "function call";
        case _t:
        case R:
        case G:
            return "operator";
        case Tt:
            return "generator expression";
        case St:
        case vt:
            return "yield expression";
        case Rt:
            return "await expression";
        case bt:
            return "list comprehension";
        case Dt:
            return "set comprehension";
        case Bt:
            return "dict comprehension";
        case Ct:
            return "dict display";
        case Ft:
            return "set display";
        case Nt:
        case It:
            return "f-string expression";
        case L: {
            let t = i.value;
            switch (t) {
                case qe:
                case Me:
                case Ke:
                case Ue:
                    return t.toString();
                default:
                    return "literal";
            }
        }
        case ht:
            return "comparison";
        case yt:
            return "conditional expression";
        case gt:
            return "named expression";
        default:
            throw new Error("unexpected expression in assignment");
    }
}
function Qe(i) {
    return new Y(yn(i), B, 1, 0, 1, 0);
}
function Js(i) {
    return null;
}
function I(i, t) {
    return [t];
}
function xt(i, t, e) {
    return M(t !== null), e === null ? I(i, t) : [t, ...e];
}
function Pt(i, t, e) {
    return M(e !== null), t === null ? [e] : t.concat(e);
}
function Zs(i, t) {
    return t.flat();
}
function Ps(i, t, e) {
    let r = t.id,
        s = e.id;
    return new Y(r + "." + s, B, ...kt(t, e));
}
var Gs = class extends Error {};
function Cn(i) {
    switch (i.type) {
        case ds:
            return 3;
        case xs:
            return 1;
        default:
            throw new Gs();
    }
}
function es(i) {
    return i.reduce((t, e) => t + Cn(e), 0);
}
function ti(i) {
    return new pt("*", null);
}
function rs(i, t) {
    return t.map((e) => e.id);
}
function ei(i, t) {
    return t.map((e) => e.cmpop);
}
function ri(i, t) {
    return t.map((e) => e.expr);
}
function si(i, t, e) {
    return t.map((r) => V(i, r, e));
}
function Fn(i, t, e) {
    return new Y(t.id, e, ...kt(t));
}
function bn(i, t, e) {
    return new S(si(i, t.elts, e), e, ...kt(t));
}
function Dn(i, t, e) {
    return new W(si(i, t.elts, e), e, ...kt(t));
}
function Bn(i, t, e) {
    return new X(t.value, t.slice, e, ...kt(t));
}
function Tn(i, t, e) {
    return new O(t.value, t.attr, e, ...kt(t));
}
function Rn(i, t, e) {
    return new Q(V(i, t.value, e), e, ...kt(t));
}
function V(i, t, e) {
    M(g !== null);
    let r;
    switch (t.constructor) {
        case Y:
            r = Fn(i, t, e);
            break;
        case S:
            r = bn(i, t, e);
            break;
        case W:
            r = Dn(i, t, e);
            break;
        case X:
            r = Bn(i, t, e);
            break;
        case O:
            r = Tn(i, t, e);
            break;
        case Q:
            r = Rn(i, t, e);
            break;
        default:
            r = t;
    }
    return r;
}
function ii(i, t) {
    return t === null ? [] : t.map((e) => e.key);
}
function ni(i, t) {
    return t === null ? [] : t.map((e) => e.value);
}
function at(i, t, e, r) {
    let s = ze(i, t, r);
    return new Gr(s, e);
}
function ui(i, t, e) {
    return t.concat(e);
}
function We(i, t) {
    return t === null ? [] : t.map((e) => e.arg);
}
function we(i, t) {
    return t.map((e) => e.value);
}
function Z(i, t, e, r, s, n) {
    let a = [];
    if (t !== null) a = t;
    else if (e !== null) {
        let f = We(i, e.names_with_defaults);
        a = e.plain_names.concat(f);
    }
    let _ = [];
    if (r !== null && s !== null) {
        let f = We(i, s);
        _ = r.concat(f);
    } else r === null && s !== null ? (_ = We(i, s)) : r !== null && s === null && (_ = r);
    let h = [];
    if (e !== null && s !== null) {
        let f = we(i, e.names_with_defaults),
            it = we(i, s);
        h = f.concat(it);
    } else e === null && s !== null ? (h = we(i, s)) : e !== null && s === null && (h = we(i, e.names_with_defaults));
    let m = null;
    n !== null && n.vararg !== null && (m = n.vararg);
    let k = [];
    n !== null && n.kwonlyargs !== null && (k = We(i, n.kwonlyargs));
    let x = [];
    n !== null && n.kwonlyargs !== null && (x = we(i, n.kwonlyargs));
    let p = null;
    return n !== null && n.kwarg !== null && (p = n.kwarg), new jt(a, _, m, k, x, p, h);
}
function Ve(i) {
    return new jt([], [], null, [], [], null, []);
}
function ai(i, t, e) {
    return (
        M(e !== null),
        new e.constructor(
            e.name,
            e.args,
            e.body,
            t,
            e.returns,
            e.type_comment,
            e.lineno,
            e.col_offset,
            e.end_lineno,
            e.end_col_offset
        )
    );
}
function li(i, t, e) {
    return (
        M(e !== null),
        new Et(e.name, e.bases, e.keywords, e.body, t, e.lineno, e.col_offset, e.end_lineno, e.end_col_offset)
    );
}
function Sn(i) {
    return i.is_keyword;
}
function vn(i) {
    return !i.is_keyword;
}
function ss(i, t) {
    return t.filter(vn).map((e) => e.element);
}
function is(i, t) {
    return t.filter(Sn).map((e) => e.element);
}
var In = new TextEncoder();
function oi(i, t) {
    let e = t[0],
        r = t[t.length - 1],
        s = new Oe(i, e, r),
        n = null,
        a = "";
    for (let _ of t) {
        let [h, m, k, x] = js(i, _);
        n !== null && n !== k && i.raise_error(d, "cannot mix bytes and nonbytes literals"),
            (n = k),
            m ? s.concatFstring(h, 0, h.length, x, 0, _) : n ? (a += h) : s.concat(h);
    }
    if (n) {
        let [_, h] = t[0].start,
            [m, k] = t[t.length - 1].end;
        return new L(new Xe(In.encode(a)), null, _, h, m, k);
    }
    return s.finish();
}
function _i(i, t) {
    return new ee(t ?? [], []);
}
function ye(i, t) {
    if (i === null) return null;
    function e(r) {
        for (let s of r.elts) {
            let n = ye(s, t);
            if (n !== null) return n;
        }
        return null;
    }
    switch (i.constructor) {
        case W:
            return e(i);
        case S:
            return e(i);
        case Q:
            return ye(i.value, t);
        case ht:
            return t == tt.FOR_TARGETS ? (i.ops[0] === ve ? ye(i.left, t) : null) : i;
        case Y:
        case X:
        case O:
            return null;
        default:
            return i;
    }
}
function hi(i, t) {
    let e;
    return (
        t.keywords.some((r) => r.arg === null)
            ? (e = "positional argument follows keyword argument unpacking")
            : (e = "positional argument follows keyword argument"),
        i.raise_error(d, e)
    );
}
function mi(i, t) {
    let e = t.args;
    if (e.length <= 1) return null;
    let { lineno: r, col_offset: s } = e[e.length - 1];
    return i.raise_error_known_location(d, r, s + 1, "Generator expression must be parenthesized");
}
function pi(i, t, e, ...r) {
    if (e === null) return new z(Qe(i), t, [], ...r);
    let s = ss(i, e),
        n = is(i, e),
        a = t.concat(s);
    return new z(Qe(i), a, n, ...r);
}
var et = class {
    constructor(t) {
        this._v = t;
    }
    toString() {
        return String(this._v);
    }
    valueOf() {
        return this._v;
    }
    get [Symbol.toStringTag]() {
        return this.constructor._name;
    }
};
et._name = "constant";
var Nn = { "\n": "n", "\r": "r", "	": "t", "\\": "\\", "'": "'", '"': '"' };
function ci(i) {
    let t = "'";
    i.includes("'") && !i.includes('"') && (t = '"');
    let e = new RegExp(`([\\n\\r\\\\	${t}])`, "g");
    return (
        (i = i.replace(e, (r, s) => "\\" + Nn[s])),
        (i = i.replace(/[\x00-\x1f]/g, (r) => "\\x" + r.charCodeAt(0).toString(16).padStart(2, "0"))),
        t + i + t
    );
}
var Le = class extends et {
    toString() {
        return ci(this._v);
    }
};
Le._name = "str";
var Ce = class extends et {};
Ce._name = "int";
var He = class extends et {
    toString() {
        let t = this._v;
        if ((t > 0 && t < 1e-4) || (t < 0 && t > -1e-4)) return t.toExponential().replace(/(e[-+])([1-9])$/, "$10$2");
        {
            let e = t.toString();
            return e.includes(".") ? e : e + ".0";
        }
    }
};
He._name = "float";
var je = class extends et {
    constructor({ real: t = 0, imag: e }) {
        M(t === 0), super({ real: t, imag: e });
    }
    toString() {
        let { imag: t } = this._v;
        return t + "j";
    }
};
je._name = "complex";
var Xe = class extends et {
    toString() {
        return "b" + ci(new TextDecoder().decode(this._v));
    }
};
Xe._name = "bytes";
var ns = class extends et {
    toString() {
        return "None";
    }
};
ns._name = "NoneType";
var Ye = class extends et {
    toString() {
        return this._v ? "True" : "False";
    }
};
Ye._name = "bool";
var us = class extends et {
    toString() {
        return "Ellipsis";
    }
};
us._name = "ellipsis";
var qe = new ns(null),
    Ke = new Ye(!0),
    Me = new Ye(!1),
    Ue = new us("...");
var Ln = new RegExp(De);
function ki(i) {
    i = i.replaceAll("_", "");
    let t = i[i.length - 1];
    if (t === "j" || t === "J") return new je({ imag: parseFloat(i.slice(0, -1)) });
    if (Ln.test(i)) return new He(parseFloat(i));
    let e = Number(i);
    if (e > Number.MAX_SAFE_INTEGER) {
        let r = typeof BigInt == "undefined" ? JSBI.BigInt(i) : BigInt(i);
        return new Ce(r);
    }
    return new Ce(e);
}
function xi(i, t, e) {}
function o(i, t, e) {
    let r = e.value;
    function s() {
        let n = this._mark,
            a = this._cache[n],
            _ = a.get(t);
        if (_ !== void 0) return (this._mark = _[1]), _[0];
        let h = r.call(this);
        return a.set(t, [h, this._mark]), h;
    }
    e.value = s;
}
function rt(i, t, e) {
    let r = e.value;
    function s() {
        let n = this._mark,
            a = this._cache[n],
            _ = a.get(t);
        if (_ !== void 0) return (this._mark = _[1]), _[0];
        let h = null,
            m = n;
        for (_ = [h, m], a.set(t, _); ; ) {
            this._mark = n;
            let k = r.call(this);
            if (k === null) {
                this._mark = m;
                break;
            }
            if (this._mark <= m) {
                this._mark = m;
                break;
            }
            (_[0] = h = k), (_[1] = m = this._mark);
        }
        return h;
    }
    e.value = s;
}
var as = class {
    constructor(t) {
        this.type_ignore_comments = [];
        (this._tok = t),
            (this._mark = 0),
            (this._cache = [new Map()]),
            (this._tokens = this._tok._tokens),
            (this.filename = "<unknown>");
    }
    extra(t) {
        let e = this._tokens[t].start,
            r = this._mark - 1,
            s = this._tokens[r];
        for (; r >= 0; ) {
            let a = s.type;
            if (a !== hs && (a < ks || a > er)) break;
            s = this._tokens[--r];
        }
        let n = s.end;
        return [e[0], e[1], n[0], n[1]];
    }
    peek() {
        return this._mark === this._tokens.length
            ? (this._cache.push(new Map()), this._tok.getnext())
            : this._tokens[this._mark];
    }
    diagnose() {
        return this._tokens.length === 0 && this.peek(), this._tokens[this._tokens.length - 1];
    }
    raise_error(t, e, ...r) {
        let s = this.diagnose();
        return this.raise_error_known_location(t, s.start[0], s.start[1] + 1, e, ...r);
    }
    raise_error_known_location(t, e, r, s, ...n) {
        this.start_rule === v.FSTRING_INPUT && (s = "f-string: " + s);
        for (let h of n) s = s.replace("%s", h);
        let a = this.diagnose(),
            _ = this._tokens.length - 1;
        for (; a.lineno !== e && _ > 0; ) a = this._tokens[--_];
        throw new t(s, [this.filename, e, r, a.line]);
    }
    raise_error_invalid_target(t, e) {
        let r = ye(e, t);
        if (r !== null) {
            let s = t === tt.STAR_TARGETS || t === tt.FOR_TARGETS ? "cannot assign to %s" : "cannot delete %s";
            return this.raise_error_known_location(d, r.lineno, r.col_offset, s, Zt(r));
        }
        return this.raise_error(d, "invalid syntax");
    }
    name() {
        let t = this.peek();
        return t.type === ms && !fi.has(t.string)
            ? (this._mark++, new Y(t.string, B, t.start[0], t.start[1], t.end[0], t.end[1]))
            : null;
    }
    string() {
        let t = this.peek();
        return t.type === cs ? (this._mark++, t) : null;
    }
    number() {
        let t = this.peek();
        return t.type === ps
            ? (this._mark++, new L(ki(t.string), null, t.start[0], t.start[1], t.end[0], t.end[1]))
            : null;
    }
    keyword(t) {
        let e = this.peek();
        return e.string === t ? (this._mark++, e) : null;
    }
    expect(t) {
        let e = this.peek();
        return t === e.type ? (this._mark++, e) : null;
    }
    positive_lookahead(t, e) {
        let r = this._mark,
            s = t.call(this, e);
        return (this._mark = r), s;
    }
    negative_lookahead(t, e) {
        let r = this._mark,
            s = t.call(this, e);
        return (this._mark = r), !s;
    }
    make_syntax_error() {
        let t = this.diagnose(),
            { type: e } = t;
        throw (
            (e === fs
                ? this.raise_error(nt, "unexpected indent")
                : e === er && this.raise_error(nt, "unexpected unindent"),
            this.raise_error(d, "invalid syntax"))
        );
    }
};
function w(...i) {
    return i[0];
}
function st(i, t, e) {
    return e;
}
function di(i) {
    return i;
}
var u = class extends as {
    constructor(t, e = v.FILE_INPUT, r = 0) {
        super(t);
        (this.start_rule = e), (this.flags = r);
    }
    parse() {
        let t = null;
        switch (this.start_rule) {
            case v.FILE_INPUT:
                t = this.file();
                break;
            case v.SINGLE_INPUT:
                t = this.interactive();
                break;
            case v.EVAL_INPUT:
                t = this.eval();
                break;
            case v.FUNC_TYPE_INPUT:
                t = this.func_type();
                break;
            case v.FSTRING_INPUT:
                t = this.fstring();
                break;
        }
        return t === null ? this.make_syntax_error() : ((this._cache.length = 1), (this._mark = 0), t);
    }
    file() {
        let t,
            e,
            r = this._mark;
        return (t = this.statements()), 1 && (e = this.expect(0)) ? _i(this, t) : ((this._mark = r), null);
    }
    interactive() {
        let t,
            e = this._mark;
        return (t = this.statement_newline()) ? new re(t) : ((this._mark = e), null);
    }
    eval() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.expressions()) && (t = this._loop0_1()) && (r = this.expect(0))
            ? new se(e)
            : ((this._mark = s), null);
    }
    func_type() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h = this._mark;
        return (n = this.expect(7)) &&
            ((e = this.type_expressions()), 1) &&
            (a = this.expect(8)) &&
            (_ = this.expect(51)) &&
            (r = this.expression()) &&
            (t = this._loop0_2()) &&
            (s = this.expect(0))
            ? new ie(e, r)
            : ((this._mark = h), null);
    }
    fstring() {
        let t,
            e = this._mark;
        return (t = this.star_expressions()) ? t : ((this._mark = e), null);
    }
    type_expressions() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m = this._mark;
        return (e = this._gather_3()) &&
            (n = this.expect(12)) &&
            (a = this.expect(16)) &&
            (r = this.expression()) &&
            (_ = this.expect(12)) &&
            (h = this.expect(35)) &&
            (s = this.expression())
            ? Pt(this, w(Pt(this, e, r)), s)
            : ((this._mark = m),
              (e = this._gather_5()) && (n = this.expect(12)) && (a = this.expect(16)) && (r = this.expression())
                  ? Pt(this, e, r)
                  : ((this._mark = m),
                    (e = this._gather_7()) && (n = this.expect(12)) && (a = this.expect(35)) && (r = this.expression())
                        ? Pt(this, e, r)
                        : ((this._mark = m),
                          (n = this.expect(16)) &&
                          (e = this.expression()) &&
                          (a = this.expect(12)) &&
                          (_ = this.expect(35)) &&
                          (r = this.expression())
                              ? Pt(this, w(I(this, e)), r)
                              : ((this._mark = m),
                                (n = this.expect(16)) && (e = this.expression())
                                    ? I(this, e)
                                    : ((this._mark = m),
                                      (n = this.expect(35)) && (e = this.expression())
                                          ? I(this, e)
                                          : ((this._mark = m),
                                            (t = this._gather_9()) ? t : ((this._mark = m), null)))))));
    }
    statements() {
        let t,
            e = this._mark;
        return (t = this._loop1_11()) ? Zs(this, t) : ((this._mark = e), null);
    }
    statement() {
        let t,
            e,
            r = this._mark;
        return (t = this.compound_stmt())
            ? I(this, t)
            : ((this._mark = r), (e = this.simple_stmt()) ? e : ((this._mark = r), null));
    }
    statement_newline() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.compound_stmt()) && (r = this.expect(4))) return I(this, t);
        if (((this._mark = n), (s = this.simple_stmt()))) return s;
        if (((this._mark = n), (r = this.expect(4)))) {
            let a = this.extra(n);
            return I(this, w(new Wt(...a)));
        }
        return (this._mark = n), (e = this.expect(0)) ? Js(this) : ((this._mark = n), null);
    }
    simple_stmt() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.small_stmt()) && this.negative_lookahead(this.expect, 13) && (e = this.expect(4))
            ? I(this, t)
            : ((this._mark = s),
              (t = this._gather_12()) && ((r = this.expect(13)), 1) && (e = this.expect(4))
                  ? t
                  : ((this._mark = s), null));
    }
    small_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m,
            k,
            x,
            p = this._mark;
        if ((e = this.assignment())) return e;
        if (((this._mark = p), (s = this.star_expressions()))) {
            let f = this.extra(p);
            return new Qt(s, ...f);
        }
        if (((this._mark = p), this.positive_lookahead(this.keyword, "return") && (k = this.return_stmt()))) return k;
        if (((this._mark = p), this.positive_lookahead(this._tmp_14) && (a = this.import_stmt()))) return a;
        if (((this._mark = p), this.positive_lookahead(this.keyword, "raise") && (m = this.raise_stmt()))) return m;
        if (((this._mark = p), (_ = this.keyword("pass")))) {
            let f = this.extra(p);
            return new Wt(...f);
        }
        if (((this._mark = p), this.positive_lookahead(this.keyword, "del") && (r = this.del_stmt()))) return r;
        if (((this._mark = p), this.positive_lookahead(this.keyword, "yield") && (x = this.yield_stmt()))) return x;
        if (((this._mark = p), this.positive_lookahead(this.keyword, "assert") && (t = this.assert_stmt()))) return t;
        if (((this._mark = p), (_ = this.keyword("break")))) {
            let f = this.extra(p);
            return new de(...f);
        }
        if (((this._mark = p), (_ = this.keyword("continue")))) {
            let f = this.extra(p);
            return new Ae(...f);
        }
        return (
            (this._mark = p),
            this.positive_lookahead(this.keyword, "global") && (n = this.global_stmt())
                ? n
                : ((this._mark = p),
                  this.positive_lookahead(this.keyword, "nonlocal") && (h = this.nonlocal_stmt())
                      ? h
                      : ((this._mark = p), null))
        );
    }
    compound_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h = this._mark;
        return this.positive_lookahead(this._tmp_15) && (r = this.function_def())
            ? r
            : ((this._mark = h),
              this.positive_lookahead(this.keyword, "if") && (s = this.if_stmt())
                  ? s
                  : ((this._mark = h),
                    this.positive_lookahead(this._tmp_16) && (t = this.class_def())
                        ? t
                        : ((this._mark = h),
                          this.positive_lookahead(this._tmp_17) && (_ = this.with_stmt())
                              ? _
                              : ((this._mark = h),
                                this.positive_lookahead(this._tmp_18) && (e = this.for_stmt())
                                    ? e
                                    : ((this._mark = h),
                                      this.positive_lookahead(this.keyword, "try") && (n = this.try_stmt())
                                          ? n
                                          : ((this._mark = h),
                                            this.positive_lookahead(this.keyword, "while") && (a = this.while_stmt())
                                                ? a
                                                : ((this._mark = h), null)))))));
    }
    assignment() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = !1,
            h = this._mark;
        if ((t = this.name()) && (n = this.expect(11)) && (e = this.expression()) && ((r = this._tmp_19()), 1)) {
            let m = this.extra(h);
            return st(6, "Variable annotation syntax is", new Xt(w(V(this, t, D)), e, r, 1, ...m));
        }
        if (
            ((this._mark = h),
            (t = this._tmp_20()) && (n = this.expect(11)) && (e = this.expression()) && ((r = this._tmp_21()), 1))
        ) {
            let m = this.extra(h);
            return st(6, "Variable annotations syntax is", new Xt(t, e, r, 0, ...m));
        }
        if (
            ((this._mark = h),
            (t = this._loop1_22()) &&
                (e = this._tmp_23()) &&
                this.negative_lookahead(this.expect, 22) &&
                ((a = this.expect(58)), 1))
        ) {
            let m = this.extra(h);
            return new oe(t, e, ft(this, a), ...m);
        }
        if (
            ((this._mark = h),
            (t = this.single_target()) && (e = this.augassign()) && (_ = !0) && (r = this._tmp_24()))
        ) {
            let m = this.extra(h);
            return new _e(t, e.kind, r, ...m);
        }
        return (this._mark = h), _ ? null : (s = this.invalid_assignment()) ? s : ((this._mark = h), null);
    }
    augassign() {
        let t,
            e = this._mark;
        return (t = this.expect(36))
            ? new U(yr)
            : ((this._mark = e),
              (t = this.expect(37))
                  ? new U(Cr)
                  : ((this._mark = e),
                    (t = this.expect(38))
                        ? new U(Fr)
                        : ((this._mark = e),
                          (t = this.expect(50))
                              ? st(5, "The '@' operator is", new U(br))
                              : ((this._mark = e),
                                (t = this.expect(39))
                                    ? new U(Dr)
                                    : ((this._mark = e),
                                      (t = this.expect(40))
                                          ? new U(Br)
                                          : ((this._mark = e),
                                            (t = this.expect(41))
                                                ? new U(Nr)
                                                : ((this._mark = e),
                                                  (t = this.expect(42))
                                                      ? new U(vr)
                                                      : ((this._mark = e),
                                                        (t = this.expect(43))
                                                            ? new U(Ir)
                                                            : ((this._mark = e),
                                                              (t = this.expect(44))
                                                                  ? new U(Rr)
                                                                  : ((this._mark = e),
                                                                    (t = this.expect(45))
                                                                        ? new U(Sr)
                                                                        : ((this._mark = e),
                                                                          (t = this.expect(46))
                                                                              ? new U(Tr)
                                                                              : ((this._mark = e),
                                                                                (t = this.expect(48))
                                                                                    ? new U(Lr)
                                                                                    : ((this._mark = e),
                                                                                      null)))))))))))));
    }
    global_stmt() {
        let t,
            e,
            r = this._mark;
        if ((e = this.keyword("global")) && (t = this._gather_25())) {
            let s = this.extra(r);
            return new fe(w(rs(this, t)), ...s);
        }
        return (this._mark = r), null;
    }
    nonlocal_stmt() {
        let t,
            e,
            r = this._mark;
        if ((e = this.keyword("nonlocal")) && (t = this._gather_27())) {
            let s = this.extra(r);
            return new xe(w(rs(this, t)), ...s);
        }
        return (this._mark = r), null;
    }
    yield_stmt() {
        let t,
            e = this._mark;
        if ((t = this.yield_expr())) {
            let r = this.extra(e);
            return new Qt(t, ...r);
        }
        return (this._mark = e), null;
    }
    assert_stmt() {
        let t,
            e,
            r,
            s = this._mark;
        if ((r = this.keyword("assert")) && (t = this.expression()) && ((e = this._tmp_29()), 1)) {
            let n = this.extra(s);
            return new ce(t, e, ...n);
        }
        return (this._mark = s), null;
    }
    del_stmt() {
        let t,
            e,
            r,
            s = this._mark;
        if ((r = this.keyword("del")) && (t = this.del_targets()) && this.positive_lookahead(this._tmp_30)) {
            let n = this.extra(s);
            return new le(t, ...n);
        }
        return (this._mark = s), (e = this.invalid_del_stmt()) ? e : ((this._mark = s), null);
    }
    import_stmt() {
        let t,
            e,
            r = this._mark;
        return (e = this.import_name())
            ? e
            : ((this._mark = r), (t = this.import_from()) ? t : ((this._mark = r), null));
    }
    import_name() {
        let t,
            e,
            r = this._mark;
        if ((e = this.keyword("import")) && (t = this.dotted_as_names())) {
            let s = this.extra(r);
            return new ke(t, ...s);
        }
        return (this._mark = r), null;
    }
    import_from() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (s = this.keyword("from")) &&
            (t = this._loop0_31()) &&
            (e = this.dotted_name()) &&
            (n = this.keyword("import")) &&
            (r = this.import_from_targets())
        ) {
            let _ = this.extra(a);
            return new zt(e.id, r, es(t), ..._);
        }
        if (
            ((this._mark = a),
            (s = this.keyword("from")) &&
                (t = this._loop1_32()) &&
                (n = this.keyword("import")) &&
                (e = this.import_from_targets()))
        ) {
            let _ = this.extra(a);
            return new zt(null, e, es(t), ..._);
        }
        return (this._mark = a), null;
    }
    import_from_targets() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        return (s = this.expect(7)) &&
            (t = this.import_from_as_names()) &&
            ((a = this.expect(12)), 1) &&
            (n = this.expect(8))
            ? t
            : ((this._mark = _),
              (e = this.import_from_as_names()) && this.negative_lookahead(this.expect, 12)
                  ? e
                  : ((this._mark = _),
                    (s = this.expect(16))
                        ? I(this, w(ti(this)))
                        : ((this._mark = _),
                          (r = this.invalid_import_from_targets()) ? r : ((this._mark = _), null))));
    }
    import_from_as_names() {
        let t,
            e = this._mark;
        return (t = this._gather_33()) ? t : ((this._mark = e), null);
    }
    import_from_as_name() {
        let t,
            e,
            r = this._mark;
        return (t = this.name()) && ((e = this._tmp_35()), 1)
            ? new pt(t.id, e ? e.id : null)
            : ((this._mark = r), null);
    }
    dotted_as_names() {
        let t,
            e = this._mark;
        return (t = this._gather_36()) ? t : ((this._mark = e), null);
    }
    dotted_as_name() {
        let t,
            e,
            r = this._mark;
        return (t = this.dotted_name()) && ((e = this._tmp_38()), 1)
            ? new pt(t.id, e ? e.id : null)
            : ((this._mark = r), null);
    }
    dotted_name() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.dotted_name()) && (r = this.expect(23)) && (e = this.name())
            ? Ps(this, t, e)
            : ((this._mark = n), (s = this.name()) ? s : ((this._mark = n), null));
    }
    if_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (s = this.keyword("if")) &&
            (t = this.named_expression()) &&
            (n = this.expect(11)) &&
            (e = this.block()) &&
            (r = this.elif_stmt())
        ) {
            let _ = this.extra(a);
            return new ot(t, e, w(I(this, r)), ..._);
        }
        if (
            ((this._mark = a),
            (s = this.keyword("if")) &&
                (t = this.named_expression()) &&
                (n = this.expect(11)) &&
                (e = this.block()) &&
                ((r = this.else_block()), 1))
        ) {
            let _ = this.extra(a);
            return new ot(t, e, r, ..._);
        }
        return (this._mark = a), null;
    }
    elif_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (s = this.keyword("elif")) &&
            (t = this.named_expression()) &&
            (n = this.expect(11)) &&
            (e = this.block()) &&
            (r = this.elif_stmt())
        ) {
            let _ = this.extra(a);
            return new ot(t, e, w(I(this, r)), ..._);
        }
        if (
            ((this._mark = a),
            (s = this.keyword("elif")) &&
                (t = this.named_expression()) &&
                (n = this.expect(11)) &&
                (e = this.block()) &&
                ((r = this.else_block()), 1))
        ) {
            let _ = this.extra(a);
            return new ot(t, e, r, ..._);
        }
        return (this._mark = a), null;
    }
    else_block() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.keyword("else")) && (r = this.expect(11)) && (t = this.block())
            ? t
            : ((this._mark = s), null);
    }
    while_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (s = this.keyword("while")) &&
            (t = this.named_expression()) &&
            (n = this.expect(11)) &&
            (e = this.block()) &&
            ((r = this.else_block()), 1)
        ) {
            let _ = this.extra(a);
            return new pe(t, e, r, ..._);
        }
        return (this._mark = a), null;
    }
    for_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m,
            k,
            x = !1,
            p = this._mark;
        if (
            (a = this.keyword("for")) &&
            (m = this.star_targets()) &&
            (_ = this.keyword("in")) &&
            (x = !0) &&
            (s = this.star_expressions()) &&
            (h = this.expect(11)) &&
            ((k = this.expect(58)), 1) &&
            (e = this.block()) &&
            ((r = this.else_block()), 1)
        ) {
            let f = this.extra(p);
            return new he(m, s, e, r, ft(this, k), ...f);
        }
        if (((this._mark = p), x)) return null;
        if (
            (t = this.expect(56)) &&
            (a = this.keyword("for")) &&
            (m = this.star_targets()) &&
            (_ = this.keyword("in")) &&
            (x = !0) &&
            (s = this.star_expressions()) &&
            (h = this.expect(11)) &&
            ((k = this.expect(58)), 1) &&
            (e = this.block()) &&
            ((r = this.else_block()), 1)
        ) {
            let f = this.extra(p);
            return st(5, "Async for loops are", new me(m, s, e, r, ft(this, k), ...f));
        }
        return (this._mark = p), x ? null : (n = this.invalid_for_target()) ? n : ((this._mark = p), null);
    }
    with_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m,
            k = this._mark;
        if (
            (s = this.keyword("with")) &&
            (n = this.expect(7)) &&
            (t = this._gather_39()) &&
            ((h = this.expect(12)), 1) &&
            (a = this.expect(8)) &&
            (_ = this.expect(11)) &&
            (r = this.block())
        ) {
            let x = this.extra(k);
            return new Ut(t, r, null, ...x);
        }
        if (
            ((this._mark = k),
            (s = this.keyword("with")) &&
                (t = this._gather_41()) &&
                (n = this.expect(11)) &&
                ((m = this.expect(58)), 1) &&
                (r = this.block()))
        ) {
            let x = this.extra(k);
            return new Ut(t, r, ft(this, m), ...x);
        }
        if (
            ((this._mark = k),
            (e = this.expect(56)) &&
                (s = this.keyword("with")) &&
                (n = this.expect(7)) &&
                (t = this._gather_43()) &&
                ((h = this.expect(12)), 1) &&
                (a = this.expect(8)) &&
                (_ = this.expect(11)) &&
                (r = this.block()))
        ) {
            let x = this.extra(k);
            return st(5, "Async with statements are", new Mt(t, r, null, ...x));
        }
        if (
            ((this._mark = k),
            (e = this.expect(56)) &&
                (s = this.keyword("with")) &&
                (t = this._gather_45()) &&
                (n = this.expect(11)) &&
                ((m = this.expect(58)), 1) &&
                (r = this.block()))
        ) {
            let x = this.extra(k);
            return st(5, "Async with statements are", new Mt(t, r, ft(this, m), ...x));
        }
        return (this._mark = k), null;
    }
    with_item() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.expression()) &&
            (r = this.keyword("as")) &&
            (s = this.star_target()) &&
            this.positive_lookahead(this._tmp_47)
            ? new Yt(t, s)
            : ((this._mark = n),
              (e = this.invalid_with_item())
                  ? e
                  : ((this._mark = n), (t = this.expression()) ? new Yt(t, null) : ((this._mark = n), null)));
    }
    try_stmt() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        if ((n = this.keyword("try")) && (a = this.expect(11)) && (t = this.block()) && (s = this.finally_block())) {
            let h = this.extra(_);
            return new Kt(t, null, null, s, ...h);
        }
        if (
            ((this._mark = _),
            (n = this.keyword("try")) &&
                (a = this.expect(11)) &&
                (t = this.block()) &&
                (r = this._loop1_48()) &&
                ((e = this.else_block()), 1) &&
                ((s = this.finally_block()), 1))
        ) {
            let h = this.extra(_);
            return new Kt(t, r, e, s, ...h);
        }
        return (this._mark = _), null;
    }
    except_block() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (r = this.keyword("except")) &&
            (e = this.expression()) &&
            ((n = this._tmp_49()), 1) &&
            (s = this.expect(11)) &&
            (t = this.block())
        ) {
            let _ = this.extra(a);
            return new Ht(e, n ? n.id : null, t, ..._);
        }
        if (((this._mark = a), (r = this.keyword("except")) && (s = this.expect(11)) && (t = this.block()))) {
            let _ = this.extra(a);
            return new Ht(null, null, t, ..._);
        }
        return (this._mark = a), null;
    }
    finally_block() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.keyword("finally")) && (r = this.expect(11)) && (t = this.block())
            ? t
            : ((this._mark = s), null);
    }
    return_stmt() {
        let t,
            e,
            r = this._mark;
        if ((e = this.keyword("return")) && ((t = this.star_expressions()), 1)) {
            let s = this.extra(r);
            return new ae(t, ...s);
        }
        return (this._mark = r), null;
    }
    raise_stmt() {
        let t,
            e,
            r,
            s = this._mark;
        if ((r = this.keyword("raise")) && (t = this.expression()) && ((e = this._tmp_50()), 1)) {
            let n = this.extra(s);
            return new qt(t, e, ...n);
        }
        if (((this._mark = s), (r = this.keyword("raise")))) {
            let n = this.extra(s);
            return new qt(null, null, ...n);
        }
        return (this._mark = s), null;
    }
    function_def() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.decorators()) && (e = this.function_def_raw())
            ? ai(this, t, e)
            : ((this._mark = s), (r = this.function_def_raw()) ? r : ((this._mark = s), null));
    }
    function_def_raw() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m,
            k,
            x = this._mark;
        if (
            (s = this.keyword("def")) &&
            (h = this.name()) &&
            (n = this.expect(7)) &&
            ((m = this.params()), 1) &&
            (a = this.expect(8)) &&
            ((t = this._tmp_51()), 1) &&
            (_ = this.expect(11)) &&
            ((k = this.func_type_comment()), 1) &&
            (r = this.block())
        ) {
            let p = this.extra(x);
            return new ne(h.id, m || w(Ve(this)), r, null, t, ft(this, k), ...p);
        }
        if (
            ((this._mark = x),
            (e = this.expect(56)) &&
                (s = this.keyword("def")) &&
                (h = this.name()) &&
                (n = this.expect(7)) &&
                ((m = this.params()), 1) &&
                (a = this.expect(8)) &&
                ((t = this._tmp_52()), 1) &&
                (_ = this.expect(11)) &&
                ((k = this.func_type_comment()), 1) &&
                (r = this.block()))
        ) {
            let p = this.extra(x);
            return st(5, "Async functions are", new ue(h.id, m || w(Ve(this)), r, null, t, ft(this, k), ...p));
        }
        return (this._mark = x), null;
    }
    func_type_comment() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (e = this.expect(4)) && (r = this.expect(58)) && this.positive_lookahead(this._tmp_53)
            ? r
            : ((this._mark = n),
              (t = this.invalid_double_type_comments())
                  ? t
                  : ((this._mark = n), (s = this.expect(58)) ? s : ((this._mark = n), null)));
    }
    params() {
        let t,
            e,
            r = this._mark;
        return (t = this.invalid_parameters())
            ? t
            : ((this._mark = r), (e = this.parameters()) ? e : ((this._mark = r), null));
    }
    parameters() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.slash_no_default()) &&
            (e = this._loop0_54()) &&
            (r = this._loop0_55()) &&
            ((s = this.star_etc()), 1)
            ? Z(this, t, null, e, r, s)
            : ((this._mark = n),
              (t = this.slash_with_default()) && (e = this._loop0_56()) && ((r = this.star_etc()), 1)
                  ? Z(this, null, t, null, e, r)
                  : ((this._mark = n),
                    (t = this._loop1_57()) && (e = this._loop0_58()) && ((r = this.star_etc()), 1)
                        ? Z(this, null, null, t, e, r)
                        : ((this._mark = n),
                          (t = this._loop1_59()) && ((e = this.star_etc()), 1)
                              ? Z(this, null, null, null, t, e)
                              : ((this._mark = n),
                                (t = this.star_etc())
                                    ? Z(this, null, null, null, null, t)
                                    : ((this._mark = n), null)))));
    }
    slash_no_default() {
        let t,
            e,
            r,
            s = this._mark;
        return ((t = this._loop1_60()) && (e = this.expect(17)) && (r = this.expect(12))) ||
            ((this._mark = s),
            (t = this._loop1_61()) && (e = this.expect(17)) && this.positive_lookahead(this.expect, 8))
            ? t
            : ((this._mark = s), null);
    }
    slash_with_default() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this._loop0_62()) && (e = this._loop1_63()) && (r = this.expect(17)) && (s = this.expect(12))
            ? new $t(t, e)
            : ((this._mark = n),
              (t = this._loop0_64()) &&
              (e = this._loop1_65()) &&
              (r = this.expect(17)) &&
              this.positive_lookahead(this.expect, 8)
                  ? new $t(t, e)
                  : ((this._mark = n), null));
    }
    star_etc() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        return (n = this.expect(16)) &&
            (t = this.param_no_default()) &&
            (e = this._loop0_66()) &&
            ((r = this.kwds()), 1)
            ? new ct(t, e, r)
            : ((this._mark = _),
              (n = this.expect(16)) && (a = this.expect(12)) && (e = this._loop1_67()) && ((r = this.kwds()), 1)
                  ? new ct(null, e, r)
                  : ((this._mark = _),
                    (t = this.kwds())
                        ? new ct(null, null, t)
                        : ((this._mark = _), (s = this.invalid_star_etc()) ? s : ((this._mark = _), null))));
    }
    kwds() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(35)) && (t = this.param_no_default()) ? t : ((this._mark = r), null);
    }
    param_no_default() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.param()) && (e = this.expect(12)) && ((r = this.expect(58)), 1)
            ? ze(this, t, r)
            : ((this._mark = s),
              (t = this.param()) && ((r = this.expect(58)), 1) && this.positive_lookahead(this.expect, 8)
                  ? ze(this, t, r)
                  : ((this._mark = s), null));
    }
    param_with_default() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.param()) && (e = this.default()) && (r = this.expect(12)) && ((s = this.expect(58)), 1)
            ? at(this, t, e, s)
            : ((this._mark = n),
              (t = this.param()) &&
              (e = this.default()) &&
              ((s = this.expect(58)), 1) &&
              this.positive_lookahead(this.expect, 8)
                  ? at(this, t, e, s)
                  : ((this._mark = n), null));
    }
    param_maybe_default() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.param()) && ((e = this.default()), 1) && (r = this.expect(12)) && ((s = this.expect(58)), 1)
            ? at(this, t, e, s)
            : ((this._mark = n),
              (t = this.param()) &&
              ((e = this.default()), 1) &&
              ((s = this.expect(58)), 1) &&
              this.positive_lookahead(this.expect, 8)
                  ? at(this, t, e, s)
                  : ((this._mark = n), null));
    }
    param() {
        let t,
            e,
            r = this._mark;
        if ((t = this.name()) && ((e = this.annotation()), 1)) {
            let s = this.extra(r);
            return new ut(t.id, e, null, ...s);
        }
        return (this._mark = r), null;
    }
    annotation() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(11)) && (t = this.expression()) ? t : ((this._mark = r), null);
    }
    default() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(22)) && (t = this.expression()) ? t : ((this._mark = r), null);
    }
    decorators() {
        let t,
            e = this._mark;
        return (t = this._loop1_68()) ? t : ((this._mark = e), null);
    }
    class_def() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.decorators()) && (e = this.class_def_raw())
            ? li(this, t, e)
            : ((this._mark = s), (r = this.class_def_raw()) ? r : ((this._mark = s), null));
    }
    class_def_raw() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (s = this.keyword("class")) &&
            (t = this.name()) &&
            ((e = this._tmp_69()), 1) &&
            (n = this.expect(11)) &&
            (r = this.block())
        ) {
            let _ = this.extra(a);
            return new Et(t.id, e ? e.args : null, e ? e.keywords : null, r, null, ..._);
        }
        return (this._mark = a), null;
    }
    block() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        return (n = this.expect(4)) && (r = this.expect(5)) && (t = this.statements()) && (e = this.expect(6))
            ? t
            : ((this._mark = _),
              (a = this.simple_stmt())
                  ? a
                  : ((this._mark = _), (s = this.invalid_block()) ? s : ((this._mark = _), null)));
    }
    star_expressions() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if ((t = this.star_expression()) && (e = this._loop1_70()) && ((s = this.expect(12)), 1)) {
            let _ = this.extra(a);
            return new S(w(xt(this, t, e)), B, ..._);
        }
        if (((this._mark = a), (t = this.star_expression()) && (r = this.expect(12)))) {
            let _ = this.extra(a);
            return new S(w(I(this, t)), B, ..._);
        }
        return (this._mark = a), (n = this.star_expression()) ? n : ((this._mark = a), null);
    }
    star_expression() {
        let t,
            e,
            r,
            s = this._mark;
        if ((r = this.expect(16)) && (t = this.bitwise_or())) {
            let n = this.extra(s);
            return new Q(t, B, ...n);
        }
        return (this._mark = s), (e = this.expression()) ? e : ((this._mark = s), null);
    }
    star_named_expressions() {
        let t,
            e,
            r = this._mark;
        return (t = this._gather_71()) && ((e = this.expect(12)), 1) ? t : ((this._mark = r), null);
    }
    star_named_expression() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(16)) && (t = this.bitwise_or())) {
            let n = this.extra(s);
            return new Q(t, B, ...n);
        }
        return (this._mark = s), (r = this.named_expression()) ? r : ((this._mark = s), null);
    }
    named_expression() {
        let t,
            e,
            r,
            s,
            n,
            a = !1,
            _ = this._mark;
        if ((t = this.name()) && (n = this.expect(53)) && (a = !0) && (e = this.expression())) {
            let h = this.extra(_);
            return new gt(w(V(this, t, D)), e, ...h);
        }
        return (
            (this._mark = _),
            a
                ? null
                : (r = this.expression()) && this.negative_lookahead(this.expect, 53)
                ? r
                : ((this._mark = _), (s = this.invalid_named_expression()) ? s : ((this._mark = _), null))
        );
    }
    annotated_rhs() {
        let t,
            e,
            r = this._mark;
        return (e = this.yield_expr())
            ? e
            : ((this._mark = r), (t = this.star_expressions()) ? t : ((this._mark = r), null));
    }
    expressions() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if ((t = this.expression()) && (e = this._loop1_73()) && ((n = this.expect(12)), 1)) {
            let _ = this.extra(a);
            return new S(w(xt(this, t, e)), B, ..._);
        }
        if (((this._mark = a), (t = this.expression()) && (s = this.expect(12)))) {
            let _ = this.extra(a);
            return new S(w(I(this, t)), B, ..._);
        }
        return (this._mark = a), (r = this.expression()) ? r : ((this._mark = a), null);
    }
    expression() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h = this._mark;
        if (
            (t = this.disjunction()) &&
            (n = this.keyword("if")) &&
            (e = this.disjunction()) &&
            (a = this.keyword("else")) &&
            (r = this.expression())
        ) {
            let m = this.extra(h);
            return new yt(e, t, r, ...m);
        }
        return (
            (this._mark = h),
            (s = this.disjunction()) ? s : ((this._mark = h), (_ = this.lambdef()) ? _ : ((this._mark = h), null))
        );
    }
    lambdef() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if (
            (r = this.keyword("lambda")) &&
            ((t = this.lambda_params()), 1) &&
            (s = this.expect(11)) &&
            (e = this.expression())
        ) {
            let a = this.extra(n);
            return new wt(t || w(Ve(this)), e, ...a);
        }
        return (this._mark = n), null;
    }
    lambda_params() {
        let t,
            e,
            r = this._mark;
        return (t = this.invalid_lambda_parameters())
            ? t
            : ((this._mark = r), (e = this.lambda_parameters()) ? e : ((this._mark = r), null));
    }
    lambda_parameters() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.lambda_slash_no_default()) &&
            (e = this._loop0_74()) &&
            (r = this._loop0_75()) &&
            ((s = this.lambda_star_etc()), 1)
            ? Z(this, t, null, e, r, s)
            : ((this._mark = n),
              (t = this.lambda_slash_with_default()) && (e = this._loop0_76()) && ((r = this.lambda_star_etc()), 1)
                  ? Z(this, null, t, null, e, r)
                  : ((this._mark = n),
                    (t = this._loop1_77()) && (e = this._loop0_78()) && ((r = this.lambda_star_etc()), 1)
                        ? Z(this, null, null, t, e, r)
                        : ((this._mark = n),
                          (t = this._loop1_79()) && ((e = this.lambda_star_etc()), 1)
                              ? Z(this, null, null, null, t, e)
                              : ((this._mark = n),
                                (t = this.lambda_star_etc())
                                    ? Z(this, null, null, null, null, t)
                                    : ((this._mark = n), null)))));
    }
    lambda_slash_no_default() {
        let t,
            e,
            r,
            s = this._mark;
        return ((t = this._loop1_80()) && (e = this.expect(17)) && (r = this.expect(12))) ||
            ((this._mark = s),
            (t = this._loop1_81()) && (e = this.expect(17)) && this.positive_lookahead(this.expect, 11))
            ? t
            : ((this._mark = s), null);
    }
    lambda_slash_with_default() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this._loop0_82()) && (e = this._loop1_83()) && (r = this.expect(17)) && (s = this.expect(12))
            ? new $t(t, e)
            : ((this._mark = n),
              (t = this._loop0_84()) &&
              (e = this._loop1_85()) &&
              (r = this.expect(17)) &&
              this.positive_lookahead(this.expect, 11)
                  ? new $t(t, e)
                  : ((this._mark = n), null));
    }
    lambda_star_etc() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        return (n = this.expect(16)) &&
            (t = this.lambda_param_no_default()) &&
            (e = this._loop0_86()) &&
            ((r = this.lambda_kwds()), 1)
            ? new ct(t, e, r)
            : ((this._mark = _),
              (n = this.expect(16)) && (a = this.expect(12)) && (e = this._loop1_87()) && ((r = this.lambda_kwds()), 1)
                  ? new ct(null, e, r)
                  : ((this._mark = _),
                    (t = this.lambda_kwds())
                        ? new ct(null, null, t)
                        : ((this._mark = _), (s = this.invalid_lambda_star_etc()) ? s : ((this._mark = _), null))));
    }
    lambda_kwds() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(35)) && (t = this.lambda_param_no_default()) ? t : ((this._mark = r), null);
    }
    lambda_param_no_default() {
        let t,
            e,
            r = this._mark;
        return ((t = this.lambda_param()) && (e = this.expect(12))) ||
            ((this._mark = r), (t = this.lambda_param()) && this.positive_lookahead(this.expect, 11))
            ? t
            : ((this._mark = r), null);
    }
    lambda_param_with_default() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.lambda_param()) && (e = this.default()) && (r = this.expect(12))
            ? at(this, t, e, null)
            : ((this._mark = s),
              (t = this.lambda_param()) && (e = this.default()) && this.positive_lookahead(this.expect, 11)
                  ? at(this, t, e, null)
                  : ((this._mark = s), null));
    }
    lambda_param_maybe_default() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.lambda_param()) && ((e = this.default()), 1) && (r = this.expect(12))
            ? at(this, t, e, null)
            : ((this._mark = s),
              (t = this.lambda_param()) && ((e = this.default()), 1) && this.positive_lookahead(this.expect, 11)
                  ? at(this, t, e, null)
                  : ((this._mark = s), null));
    }
    lambda_param() {
        let t,
            e = this._mark;
        if ((t = this.name())) {
            let r = this.extra(e);
            return new ut(t.id, null, null, ...r);
        }
        return (this._mark = e), null;
    }
    disjunction() {
        let t,
            e,
            r,
            s = this._mark;
        if ((t = this.conjunction()) && (e = this._loop1_88())) {
            let n = this.extra(s);
            return new _t(Rs, w(xt(this, t, e)), ...n);
        }
        return (this._mark = s), (r = this.conjunction()) ? r : ((this._mark = s), null);
    }
    conjunction() {
        let t,
            e,
            r,
            s = this._mark;
        if ((t = this.inversion()) && (e = this._loop1_89())) {
            let n = this.extra(s);
            return new _t(Ts, w(xt(this, t, e)), ...n);
        }
        return (this._mark = s), (r = this.inversion()) ? r : ((this._mark = s), null);
    }
    inversion() {
        let t,
            e,
            r,
            s = this._mark;
        if ((r = this.keyword("not")) && (t = this.inversion())) {
            let n = this.extra(s);
            return new G(vs, t, ...n);
        }
        return (this._mark = s), (e = this.comparison()) ? e : ((this._mark = s), null);
    }
    comparison() {
        let t,
            e,
            r,
            s = this._mark;
        if ((t = this.bitwise_or()) && (e = this._loop1_90())) {
            let n = this.extra(s);
            return new ht(t, w(ei(this, e)), w(ri(this, e)), ...n);
        }
        return (this._mark = s), (r = this.bitwise_or()) ? r : ((this._mark = s), null);
    }
    compare_op_bitwise_or_pair() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m,
            k,
            x = this._mark;
        return (t = this.eq_bitwise_or())
            ? t
            : ((this._mark = x),
              (m = this.noteq_bitwise_or())
                  ? m
                  : ((this._mark = x),
                    (h = this.lte_bitwise_or())
                        ? h
                        : ((this._mark = x),
                          (_ = this.lt_bitwise_or())
                              ? _
                              : ((this._mark = x),
                                (r = this.gte_bitwise_or())
                                    ? r
                                    : ((this._mark = x),
                                      (e = this.gt_bitwise_or())
                                          ? e
                                          : ((this._mark = x),
                                            (k = this.notin_bitwise_or())
                                                ? k
                                                : ((this._mark = x),
                                                  (s = this.in_bitwise_or())
                                                      ? s
                                                      : ((this._mark = x),
                                                        (a = this.isnot_bitwise_or())
                                                            ? a
                                                            : ((this._mark = x),
                                                              (n = this.is_bitwise_or())
                                                                  ? n
                                                                  : ((this._mark = x), null))))))))));
    }
    eq_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(27)) && (t = this.bitwise_or()) ? new $(Ls, t) : ((this._mark = r), null);
    }
    noteq_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(28)) && (t = this.bitwise_or()) ? new $(Os, t) : ((this._mark = r), null);
    }
    lte_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(29)) && (t = this.bitwise_or()) ? new $(Us, t) : ((this._mark = r), null);
    }
    lt_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(20)) && (t = this.bitwise_or()) ? new $(Xs, t) : ((this._mark = r), null);
    }
    gte_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(30)) && (t = this.bitwise_or()) ? new $(qs, t) : ((this._mark = r), null);
    }
    gt_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(21)) && (t = this.bitwise_or()) ? new $(Ms, t) : ((this._mark = r), null);
    }
    notin_bitwise_or() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.keyword("not")) && (r = this.keyword("in")) && (t = this.bitwise_or())
            ? new $(Qs, t)
            : ((this._mark = s), null);
    }
    in_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("in")) && (t = this.bitwise_or()) ? new $(ve, t) : ((this._mark = r), null);
    }
    isnot_bitwise_or() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.keyword("is")) && (r = this.keyword("not")) && (t = this.bitwise_or())
            ? new $(zs, t)
            : ((this._mark = s), null);
    }
    is_bitwise_or() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("is")) && (t = this.bitwise_or()) ? new $(Ks, t) : ((this._mark = r), null);
    }
    bitwise_or() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.bitwise_or()) && (s = this.expect(18)) && (e = this.bitwise_xor())) {
            let a = this.extra(n);
            return new R(t, vr, e, ...a);
        }
        return (this._mark = n), (r = this.bitwise_xor()) ? r : ((this._mark = n), null);
    }
    bitwise_xor() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.bitwise_xor()) && (s = this.expect(32)) && (e = this.bitwise_and())) {
            let a = this.extra(n);
            return new R(t, Ir, e, ...a);
        }
        return (this._mark = n), (r = this.bitwise_and()) ? r : ((this._mark = n), null);
    }
    bitwise_and() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.bitwise_and()) && (r = this.expect(19)) && (e = this.shift_expr())) {
            let a = this.extra(n);
            return new R(t, Nr, e, ...a);
        }
        return (this._mark = n), (s = this.shift_expr()) ? s : ((this._mark = n), null);
    }
    shift_expr() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.shift_expr()) && (r = this.expect(33)) && (e = this.sum())) {
            let a = this.extra(n);
            return new R(t, Rr, e, ...a);
        }
        if (((this._mark = n), (t = this.shift_expr()) && (r = this.expect(34)) && (e = this.sum()))) {
            let a = this.extra(n);
            return new R(t, Sr, e, ...a);
        }
        return (this._mark = n), (s = this.sum()) ? s : ((this._mark = n), null);
    }
    sum() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.sum()) && (r = this.expect(14)) && (e = this.term())) {
            let a = this.extra(n);
            return new R(t, yr, e, ...a);
        }
        if (((this._mark = n), (t = this.sum()) && (r = this.expect(15)) && (e = this.term()))) {
            let a = this.extra(n);
            return new R(t, Cr, e, ...a);
        }
        return (this._mark = n), (s = this.term()) ? s : ((this._mark = n), null);
    }
    term() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.term()) && (s = this.expect(16)) && (e = this.factor())) {
            let a = this.extra(n);
            return new R(t, Fr, e, ...a);
        }
        if (((this._mark = n), (t = this.term()) && (s = this.expect(17)) && (e = this.factor()))) {
            let a = this.extra(n);
            return new R(t, Dr, e, ...a);
        }
        if (((this._mark = n), (t = this.term()) && (s = this.expect(47)) && (e = this.factor()))) {
            let a = this.extra(n);
            return new R(t, Lr, e, ...a);
        }
        if (((this._mark = n), (t = this.term()) && (s = this.expect(24)) && (e = this.factor()))) {
            let a = this.extra(n);
            return new R(t, Br, e, ...a);
        }
        if (((this._mark = n), (t = this.term()) && (s = this.expect(49)) && (e = this.factor()))) {
            let a = this.extra(n);
            return st(5, "The '@' operator is", new R(t, br, e, ...a));
        }
        return (this._mark = n), (r = this.factor()) ? r : ((this._mark = n), null);
    }
    factor() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(14)) && (t = this.factor())) {
            let n = this.extra(s);
            return new G(Is, t, ...n);
        }
        if (((this._mark = s), (e = this.expect(15)) && (t = this.factor()))) {
            let n = this.extra(s);
            return new G(Ns, t, ...n);
        }
        if (((this._mark = s), (e = this.expect(31)) && (t = this.factor()))) {
            let n = this.extra(s);
            return new G(Ss, t, ...n);
        }
        return (this._mark = s), (r = this.power()) ? r : ((this._mark = s), null);
    }
    power() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.await_primary()) && (s = this.expect(35)) && (r = this.factor())) {
            let a = this.extra(n);
            return new R(t, Tr, r, ...a);
        }
        return (this._mark = n), (e = this.await_primary()) ? e : ((this._mark = n), null);
    }
    await_primary() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(55)) && (t = this.primary())) {
            let n = this.extra(s);
            return st(5, "Await expressions are", new Rt(t, ...n));
        }
        return (this._mark = s), (r = this.primary()) ? r : ((this._mark = s), null);
    }
    primary() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        if ((s = this.invalid_primary())) return s;
        if (((this._mark = _), (t = this.primary()) && (n = this.expect(23)) && (r = this.name()))) {
            let h = this.extra(_);
            return new O(t, r.id, B, ...h);
        }
        if (((this._mark = _), (t = this.primary()) && (r = this.genexp()))) {
            let h = this.extra(_);
            return new z(t, w(I(this, r)), null, ...h);
        }
        if (
            ((this._mark = _),
            (t = this.primary()) && (n = this.expect(7)) && ((r = this.arguments_()), 1) && (a = this.expect(8)))
        ) {
            let h = this.extra(_);
            return new z(t, r ? r.args : null, r ? r.keywords : null, ...h);
        }
        if (
            ((this._mark = _),
            (t = this.primary()) && (n = this.expect(9)) && (r = this.slices()) && (a = this.expect(10)))
        ) {
            let h = this.extra(_);
            return new X(t, r, B, ...h);
        }
        return (this._mark = _), (e = this.atom()) ? e : ((this._mark = _), null);
    }
    slices() {
        let t,
            e,
            r = this._mark;
        if ((t = this.slice()) && this.negative_lookahead(this.expect, 12)) return t;
        if (((this._mark = r), (t = this._gather_91()) && ((e = this.expect(12)), 1))) {
            let s = this.extra(r);
            return new S(t, B, ...s);
        }
        return (this._mark = r), null;
    }
    slice() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if (
            ((t = this.expression()),
            1 && (s = this.expect(11)) && ((e = this.expression()), 1) && ((r = this._tmp_93()), 1))
        ) {
            let a = this.extra(n);
            return new Ee(t, e, r, ...a);
        }
        return (this._mark = n), (t = this.expression()) ? t : ((this._mark = n), null);
    }
    atom() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m = this._mark;
        if ((a = this.name())) return a;
        if (((this._mark = m), (s = this.keyword("True")))) {
            let k = this.extra(m);
            return new L(Ke, null, ...k);
        }
        if (((this._mark = m), (s = this.keyword("False")))) {
            let k = this.extra(m);
            return new L(Me, null, ...k);
        }
        if (((this._mark = m), (s = this.keyword("None")))) {
            let k = this.extra(m);
            return new L(qe, null, ...k);
        }
        if (((this._mark = m), (s = this.keyword("__peg_parser__")))) return this.raise_error(d, "You found it!");
        if (((this._mark = m), this.positive_lookahead(this.string) && (h = this.strings()))) return h;
        if (((this._mark = m), (_ = this.number()))) return _;
        if (((this._mark = m), this.positive_lookahead(this.expect, 7) && (t = this._tmp_94()))) return t;
        if (((this._mark = m), this.positive_lookahead(this.expect, 9) && (e = this._tmp_95()))) return e;
        if (((this._mark = m), this.positive_lookahead(this.expect, 25) && (r = this._tmp_96()))) return r;
        if (((this._mark = m), (n = this.expect(52)))) {
            let k = this.extra(m);
            return new L(Ue, null, ...k);
        }
        return (this._mark = m), null;
    }
    strings() {
        let t,
            e = this._mark;
        return (t = this._loop1_97()) ? oi(this, t) : ((this._mark = e), null);
    }
    list() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(9)) && ((t = this.star_named_expressions()), 1) && (r = this.expect(10))) {
            let n = this.extra(s);
            return new W(t, B, ...n);
        }
        return (this._mark = s), null;
    }
    listcomp() {
        let t,
            e,
            r,
            s,
            n,
            a = !1,
            _ = this._mark;
        if (
            (s = this.expect(9)) &&
            (t = this.named_expression()) &&
            (a = !0) &&
            (e = this.for_if_clauses()) &&
            (n = this.expect(10))
        ) {
            let h = this.extra(_);
            return new bt(t, e, ...h);
        }
        return (this._mark = _), a ? null : (r = this.invalid_comprehension()) ? r : ((this._mark = _), null);
    }
    tuple() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(7)) && ((t = this._tmp_98()), 1) && (r = this.expect(8))) {
            let n = this.extra(s);
            return new S(t, B, ...n);
        }
        return (this._mark = s), null;
    }
    group() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (r = this.expect(7)) && (t = this._tmp_99()) && (s = this.expect(8))
            ? t
            : ((this._mark = n), (e = this.invalid_group()) ? e : ((this._mark = n), null));
    }
    genexp() {
        let t,
            e,
            r,
            s,
            n,
            a = !1,
            _ = this._mark;
        if (
            (s = this.expect(7)) &&
            (t = this.named_expression()) &&
            (a = !0) &&
            (e = this.for_if_clauses()) &&
            (n = this.expect(8))
        ) {
            let h = this.extra(_);
            return new Tt(t, e, ...h);
        }
        return (this._mark = _), a ? null : (r = this.invalid_comprehension()) ? r : ((this._mark = _), null);
    }
    set() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(25)) && (t = this.star_named_expressions()) && (r = this.expect(26))) {
            let n = this.extra(s);
            return new Ft(t, ...n);
        }
        return (this._mark = s), null;
    }
    setcomp() {
        let t,
            e,
            r,
            s,
            n,
            a = !1,
            _ = this._mark;
        if (
            (s = this.expect(25)) &&
            (t = this.named_expression()) &&
            (a = !0) &&
            (e = this.for_if_clauses()) &&
            (n = this.expect(26))
        ) {
            let h = this.extra(_);
            return new Dt(t, e, ...h);
        }
        return (this._mark = _), a ? null : (r = this.invalid_comprehension()) ? r : ((this._mark = _), null);
    }
    dict() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(25)) && ((t = this.double_starred_kvpairs()), 1) && (r = this.expect(26))) {
            let n = this.extra(s);
            return new Ct(w(ii(this, t)), w(ni(this, t)), ...n);
        }
        return (this._mark = s), null;
    }
    dictcomp() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if ((s = this.expect(25)) && (t = this.kvpair()) && (e = this.for_if_clauses()) && (n = this.expect(26))) {
            let _ = this.extra(a);
            return new Bt(t.key, t.value, e, ..._);
        }
        return (this._mark = a), (r = this.invalid_dict_comprehension()) ? r : ((this._mark = a), null);
    }
    double_starred_kvpairs() {
        let t,
            e,
            r = this._mark;
        return (t = this._gather_100()) && ((e = this.expect(12)), 1) ? t : ((this._mark = r), null);
    }
    double_starred_kvpair() {
        let t,
            e,
            r,
            s = this._mark;
        return (r = this.expect(35)) && (t = this.bitwise_or())
            ? new Ne(null, t)
            : ((this._mark = s), (e = this.kvpair()) ? e : ((this._mark = s), null));
    }
    kvpair() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.expression()) && (r = this.expect(11)) && (e = this.expression())
            ? new Ne(t, e)
            : ((this._mark = s), null);
    }
    for_if_clauses() {
        let t,
            e = this._mark;
        return (t = this._loop1_102()) ? t : ((this._mark = e), null);
    }
    for_if_clause() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h = !1,
            m = this._mark;
        return (e = this.expect(56)) &&
            (a = this.keyword("for")) &&
            (t = this.star_targets()) &&
            (_ = this.keyword("in")) &&
            (h = !0) &&
            (r = this.disjunction()) &&
            (s = this._loop0_103())
            ? st(6, "Async comprehensions are", new Vt(t, r, s, 1))
            : ((this._mark = m),
              h
                  ? null
                  : (a = this.keyword("for")) &&
                    (t = this.star_targets()) &&
                    (_ = this.keyword("in")) &&
                    (h = !0) &&
                    (r = this.disjunction()) &&
                    (s = this._loop0_104())
                  ? new Vt(t, r, s, 0)
                  : ((this._mark = m), h ? null : (n = this.invalid_for_target()) ? n : ((this._mark = m), null)));
    }
    yield_expr() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.keyword("yield")) && (r = this.keyword("from")) && (t = this.expression())) {
            let n = this.extra(s);
            return new vt(t, ...n);
        }
        if (((this._mark = s), (e = this.keyword("yield")) && ((t = this.star_expressions()), 1))) {
            let n = this.extra(s);
            return new St(t, ...n);
        }
        return (this._mark = s), null;
    }
    arguments_() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.args()) && ((r = this.expect(12)), 1) && this.positive_lookahead(this.expect, 8)
            ? t
            : ((this._mark = s), (e = this.invalid_arguments()) ? e : ((this._mark = s), null));
    }
    args() {
        let t,
            e,
            r = this._mark;
        if ((t = this._gather_105()) && ((e = this._tmp_107()), 1)) {
            let s = this.extra(r);
            return pi(this, t, e, ...s);
        }
        if (((this._mark = r), (t = this.kwargs()))) {
            let s = this.extra(r);
            return new z(Qe(this), di(ss(this, t)), di(is(this, t)), ...s);
        }
        return (this._mark = r), null;
    }
    kwargs() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        return (r = this._gather_108()) && (n = this.expect(12)) && (s = this._gather_110())
            ? ui(this, r, s)
            : ((this._mark = a),
              (t = this._gather_112())
                  ? t
                  : ((this._mark = a), (e = this._gather_114()) ? e : ((this._mark = a), null)));
    }
    starred_expression() {
        let t,
            e,
            r = this._mark;
        if ((e = this.expect(16)) && (t = this.expression())) {
            let s = this.extra(r);
            return new Q(t, B, ...s);
        }
        return (this._mark = r), null;
    }
    kwarg_or_starred() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.name()) && (s = this.expect(22)) && (e = this.expression())) {
            let a = this.extra(n);
            return new Jt(w(new mt(t.id, e, ...a)), !0);
        }
        return (
            (this._mark = n),
            (t = this.starred_expression())
                ? new Jt(t, !1)
                : ((this._mark = n), (r = this.invalid_kwarg()) ? r : ((this._mark = n), null))
        );
    }
    kwarg_or_double_starred() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.name()) && (s = this.expect(22)) && (e = this.expression())) {
            let a = this.extra(n);
            return new Jt(w(new mt(t.id, e, ...a)), !0);
        }
        if (((this._mark = n), (s = this.expect(35)) && (t = this.expression()))) {
            let a = this.extra(n);
            return new Jt(w(new mt(null, t, ...a)), !0);
        }
        return (this._mark = n), (r = this.invalid_kwarg()) ? r : ((this._mark = n), null);
    }
    star_targets() {
        let t,
            e,
            r,
            s = this._mark;
        if ((t = this.star_target()) && this.negative_lookahead(this.expect, 12)) return t;
        if (((this._mark = s), (t = this.star_target()) && (e = this._loop0_116()) && ((r = this.expect(12)), 1))) {
            let n = this.extra(s);
            return new S(w(xt(this, t, e)), D, ...n);
        }
        return (this._mark = s), null;
    }
    star_targets_list_seq() {
        let t,
            e,
            r = this._mark;
        return (t = this._gather_117()) && ((e = this.expect(12)), 1) ? t : ((this._mark = r), null);
    }
    star_targets_tuple_seq() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.star_target()) && (e = this._loop1_119()) && ((s = this.expect(12)), 1)
            ? xt(this, t, e)
            : ((this._mark = n),
              (t = this.star_target()) && (r = this.expect(12)) ? I(this, t) : ((this._mark = n), null));
    }
    star_target() {
        let t,
            e,
            r,
            s = this._mark;
        if ((e = this.expect(16)) && (t = this._tmp_120())) {
            let n = this.extra(s);
            return new Q(w(V(this, t, D)), D, ...n);
        }
        return (this._mark = s), (r = this.target_with_star_atom()) ? r : ((this._mark = s), null);
    }
    target_with_star_atom() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (t = this.t_primary()) &&
            (r = this.expect(23)) &&
            (e = this.name()) &&
            this.negative_lookahead(this.t_lookahead)
        ) {
            let _ = this.extra(a);
            return new O(t, e.id, D, ..._);
        }
        if (
            ((this._mark = a),
            (t = this.t_primary()) &&
                (r = this.expect(9)) &&
                (e = this.slices()) &&
                (s = this.expect(10)) &&
                this.negative_lookahead(this.t_lookahead))
        ) {
            let _ = this.extra(a);
            return new X(t, e, D, ..._);
        }
        return (this._mark = a), (n = this.star_atom()) ? n : ((this._mark = a), null);
    }
    star_atom() {
        let t,
            e,
            r,
            s = this._mark;
        if ((t = this.name())) return V(this, t, D);
        if (((this._mark = s), (e = this.expect(7)) && (t = this.target_with_star_atom()) && (r = this.expect(8))))
            return V(this, t, D);
        if (
            ((this._mark = s),
            (e = this.expect(7)) && ((t = this.star_targets_tuple_seq()), 1) && (r = this.expect(8)))
        ) {
            let n = this.extra(s);
            return new S(t, D, ...n);
        }
        if (
            ((this._mark = s),
            (e = this.expect(9)) && ((t = this.star_targets_list_seq()), 1) && (r = this.expect(10)))
        ) {
            let n = this.extra(s);
            return new W(t, D, ...n);
        }
        return (this._mark = s), null;
    }
    single_target() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (s = this.single_subscript_attribute_target())
            ? s
            : ((this._mark = n),
              (t = this.name())
                  ? V(this, t, D)
                  : ((this._mark = n),
                    (e = this.expect(7)) && (t = this.single_target()) && (r = this.expect(8))
                        ? t
                        : ((this._mark = n), null)));
    }
    single_subscript_attribute_target() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if (
            (t = this.t_primary()) &&
            (r = this.expect(23)) &&
            (e = this.name()) &&
            this.negative_lookahead(this.t_lookahead)
        ) {
            let a = this.extra(n);
            return new O(t, e.id, D, ...a);
        }
        if (
            ((this._mark = n),
            (t = this.t_primary()) &&
                (r = this.expect(9)) &&
                (e = this.slices()) &&
                (s = this.expect(10)) &&
                this.negative_lookahead(this.t_lookahead))
        ) {
            let a = this.extra(n);
            return new X(t, e, D, ...a);
        }
        return (this._mark = n), null;
    }
    del_targets() {
        let t,
            e,
            r = this._mark;
        return (t = this._gather_121()) && ((e = this.expect(12)), 1) ? t : ((this._mark = r), null);
    }
    del_target() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (t = this.t_primary()) &&
            (s = this.expect(23)) &&
            (e = this.name()) &&
            this.negative_lookahead(this.t_lookahead)
        ) {
            let _ = this.extra(a);
            return new O(t, e.id, dt, ..._);
        }
        if (
            ((this._mark = a),
            (t = this.t_primary()) &&
                (s = this.expect(9)) &&
                (e = this.slices()) &&
                (n = this.expect(10)) &&
                this.negative_lookahead(this.t_lookahead))
        ) {
            let _ = this.extra(a);
            return new X(t, e, dt, ..._);
        }
        return (this._mark = a), (r = this.del_t_atom()) ? r : ((this._mark = a), null);
    }
    del_t_atom() {
        let t,
            e,
            r,
            s = this._mark;
        if ((t = this.name())) return V(this, t, dt);
        if (((this._mark = s), (e = this.expect(7)) && (t = this.del_target()) && (r = this.expect(8))))
            return V(this, t, dt);
        if (((this._mark = s), (e = this.expect(7)) && ((t = this.del_targets()), 1) && (r = this.expect(8)))) {
            let n = this.extra(s);
            return new S(t, dt, ...n);
        }
        if (((this._mark = s), (e = this.expect(9)) && ((t = this.del_targets()), 1) && (r = this.expect(10)))) {
            let n = this.extra(s);
            return new W(t, dt, ...n);
        }
        return (this._mark = s), null;
    }
    targets() {
        let t,
            e,
            r = this._mark;
        return (t = this._gather_123()) && ((e = this.expect(12)), 1) ? t : ((this._mark = r), null);
    }
    target() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        if (
            (t = this.t_primary()) &&
            (r = this.expect(23)) &&
            (e = this.name()) &&
            this.negative_lookahead(this.t_lookahead)
        ) {
            let _ = this.extra(a);
            return new O(t, e.id, D, ..._);
        }
        if (
            ((this._mark = a),
            (t = this.t_primary()) &&
                (r = this.expect(9)) &&
                (e = this.slices()) &&
                (s = this.expect(10)) &&
                this.negative_lookahead(this.t_lookahead))
        ) {
            let _ = this.extra(a);
            return new X(t, e, D, ..._);
        }
        return (this._mark = a), (n = this.t_atom()) ? n : ((this._mark = a), null);
    }
    t_primary() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if (
            (t = this.t_primary()) &&
            (r = this.expect(23)) &&
            (e = this.name()) &&
            this.positive_lookahead(this.t_lookahead)
        ) {
            let a = this.extra(n);
            return new O(t, e.id, B, ...a);
        }
        if (
            ((this._mark = n),
            (t = this.t_primary()) &&
                (r = this.expect(9)) &&
                (e = this.slices()) &&
                (s = this.expect(10)) &&
                this.positive_lookahead(this.t_lookahead))
        ) {
            let a = this.extra(n);
            return new X(t, e, B, ...a);
        }
        if (
            ((this._mark = n),
            (t = this.t_primary()) && (e = this.genexp()) && this.positive_lookahead(this.t_lookahead))
        ) {
            let a = this.extra(n);
            return new z(t, w(I(this, e)), null, ...a);
        }
        if (
            ((this._mark = n),
            (t = this.t_primary()) &&
                (r = this.expect(7)) &&
                ((e = this.arguments_()), 1) &&
                (s = this.expect(8)) &&
                this.positive_lookahead(this.t_lookahead))
        ) {
            let a = this.extra(n);
            return new z(t, e ? e.args : null, e ? e.keywords : null, ...a);
        }
        return (
            (this._mark = n),
            (t = this.atom()) && this.positive_lookahead(this.t_lookahead) ? t : ((this._mark = n), null)
        );
    }
    t_lookahead() {
        let t,
            e = this._mark;
        return (t = this.expect(7)) ||
            ((this._mark = e), (t = this.expect(9))) ||
            ((this._mark = e), (t = this.expect(23)))
            ? t
            : ((this._mark = e), null);
    }
    t_atom() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        if ((t = this.name())) return V(this, t, D);
        if (((this._mark = n), (r = this.expect(7)) && (t = this.target()) && (s = this.expect(8))))
            return V(this, t, D);
        if (((this._mark = n), (r = this.expect(7)) && ((e = this.targets()), 1) && (s = this.expect(8)))) {
            let a = this.extra(n);
            return new S(e, D, ...a);
        }
        if (((this._mark = n), (r = this.expect(9)) && ((e = this.targets()), 1) && (s = this.expect(10)))) {
            let a = this.extra(n);
            return new W(e, D, ...a);
        }
        return (this._mark = n), null;
    }
    invalid_arguments() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _ = this._mark;
        return (e = this.args()) && (s = this.expect(12)) && (n = this.expect(16))
            ? this.raise_error(d, "iterable argument unpacking follows keyword argument unpacking")
            : ((this._mark = _),
              (t = this.expression()) &&
              (r = this.for_if_clauses()) &&
              (s = this.expect(12)) &&
              ((a = this._tmp_125()), 1)
                  ? this.raise_error_known_location(
                        d,
                        t.lineno,
                        t.col_offset + 1,
                        "Generator expression must be parenthesized"
                    )
                  : ((this._mark = _),
                    (t = this.args()) && (r = this.for_if_clauses())
                        ? mi(this, t)
                        : ((this._mark = _),
                          (e = this.args()) &&
                          (s = this.expect(12)) &&
                          (t = this.expression()) &&
                          (r = this.for_if_clauses())
                              ? this.raise_error_known_location(
                                    d,
                                    t.lineno,
                                    t.col_offset + 1,
                                    "Generator expression must be parenthesized"
                                )
                              : ((this._mark = _),
                                (t = this.args()) && (s = this.expect(12)) && (e = this.args())
                                    ? hi(this, t)
                                    : ((this._mark = _), null)))));
    }
    invalid_kwarg() {
        let t,
            e,
            r = this._mark;
        return (t = this.expression()) && (e = this.expect(22))
            ? this.raise_error_known_location(
                  d,
                  t.lineno,
                  t.col_offset + 1,
                  'expression cannot contain assignment, perhaps you meant "=="?'
              )
            : ((this._mark = r), null);
    }
    invalid_named_expression() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.expression()) && (r = this.expect(53)) && (e = this.expression())
            ? this.raise_error_known_location(
                  d,
                  t.lineno,
                  t.col_offset + 1,
                  "cannot use assignment expressions with %s",
                  Zt(t)
              )
            : ((this._mark = s), null);
    }
    invalid_assignment() {
        let t,
            e,
            r,
            s,
            n,
            a,
            _,
            h,
            m,
            k = this._mark;
        return (n = this.invalid_ann_assign_target()) && (h = this.expect(11)) && (_ = this.expression())
            ? this.raise_error_known_location(
                  d,
                  n.lineno,
                  n.col_offset + 1,
                  "only single target (not %s) can be annotated",
                  Zt(n)
              )
            : ((this._mark = k),
              (n = this.star_named_expression()) &&
              (h = this.expect(12)) &&
              (t = this._loop0_126()) &&
              (m = this.expect(11)) &&
              (_ = this.expression())
                  ? this.raise_error_known_location(
                        d,
                        n.lineno,
                        n.col_offset + 1,
                        "only single target (not tuple) can be annotated"
                    )
                  : ((this._mark = k),
                    (n = this.expression()) && (h = this.expect(11)) && (_ = this.expression())
                        ? this.raise_error_known_location(
                              d,
                              n.lineno,
                              n.col_offset + 1,
                              "illegal target for annotation"
                          )
                        : ((this._mark = k),
                          (e = this._loop0_127()) && (n = this.star_expressions()) && (h = this.expect(22))
                              ? this.raise_error_invalid_target(ts, n)
                              : ((this._mark = k),
                                (r = this._loop0_128()) && (n = this.yield_expr()) && (h = this.expect(22))
                                    ? this.raise_error_known_location(
                                          d,
                                          n.lineno,
                                          n.col_offset + 1,
                                          "assignment to yield expression not possible"
                                      )
                                    : ((this._mark = k),
                                      (n = this.star_expressions()) && (a = this.augassign()) && (s = this._tmp_129())
                                          ? this.raise_error_known_location(
                                                d,
                                                n.lineno,
                                                n.col_offset + 1,
                                                "'%s' is an illegal expression for augmented assignment",
                                                Zt(n)
                                            )
                                          : ((this._mark = k), null))))));
    }
    invalid_ann_assign_target() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        return (e = this.list())
            ? e
            : ((this._mark = a),
              (n = this.tuple())
                  ? n
                  : ((this._mark = a),
                    (r = this.expect(7)) && (t = this.invalid_ann_assign_target()) && (s = this.expect(8))
                        ? t
                        : ((this._mark = a), null)));
    }
    invalid_del_stmt() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("del")) && (t = this.star_expressions())
            ? this.raise_error_invalid_target(Ws, t)
            : ((this._mark = r), null);
    }
    invalid_block() {
        let t,
            e = this._mark;
        return (t = this.expect(4)) && this.negative_lookahead(this.expect, 5)
            ? this.raise_error(nt, "expected an indented block")
            : ((this._mark = e), null);
    }
    invalid_primary() {
        let t,
            e,
            r = this._mark;
        return (e = this.primary()) && (t = this.expect(25))
            ? this.raise_error_known_location(d, t.lineno, t.col_offset + 1, "invalid syntax")
            : ((this._mark = r), null);
    }
    invalid_comprehension() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this._tmp_130()) && (e = this.starred_expression()) && (r = this.for_if_clauses())
            ? this.raise_error_known_location(
                  d,
                  e.lineno,
                  e.col_offset + 1,
                  "iterable unpacking cannot be used in comprehension"
              )
            : ((this._mark = s), null);
    }
    invalid_dict_comprehension() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        return (s = this.expect(25)) &&
            (t = this.expect(35)) &&
            (e = this.bitwise_or()) &&
            (r = this.for_if_clauses()) &&
            (n = this.expect(26))
            ? this.raise_error_known_location(
                  d,
                  t.lineno,
                  t.col_offset + 1,
                  "dict unpacking cannot be used in dict comprehension"
              )
            : ((this._mark = a), null);
    }
    invalid_parameters() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this._loop0_131()) && (e = this._tmp_132()) && (r = this.param_no_default())
            ? this.raise_error(d, "non-default argument follows default argument")
            : ((this._mark = s), null);
    }
    invalid_lambda_parameters() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this._loop0_133()) && (e = this._tmp_134()) && (r = this.lambda_param_no_default())
            ? this.raise_error(d, "non-default argument follows default argument")
            : ((this._mark = s), null);
    }
    invalid_star_etc() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (e = this.expect(16)) && (t = this._tmp_135())
            ? this.raise_error(d, "named arguments must follow bare *")
            : ((this._mark = n),
              (e = this.expect(16)) && (r = this.expect(12)) && (s = this.expect(58))
                  ? this.raise_error(d, "bare * has associated type comment")
                  : ((this._mark = n), null));
    }
    invalid_lambda_star_etc() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(16)) && (t = this._tmp_136())
            ? this.raise_error(d, "named arguments must follow bare *")
            : ((this._mark = r), null);
    }
    invalid_double_type_comments() {
        let t,
            e,
            r,
            s,
            n,
            a = this._mark;
        return (s = this.expect(58)) &&
            (e = this.expect(4)) &&
            (n = this.expect(58)) &&
            (r = this.expect(4)) &&
            (t = this.expect(5))
            ? this.raise_error(d, "Cannot have two type comments on def")
            : ((this._mark = a), null);
    }
    invalid_with_item() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.expression()) && (r = this.keyword("as")) && (t = this.expression())
            ? this.raise_error_invalid_target(ts, t)
            : ((this._mark = s), null);
    }
    invalid_for_target() {
        let t,
            e,
            r,
            s = this._mark;
        return (
            (r = this.expect(56)),
            1 && (e = this.keyword("for")) && (t = this.star_expressions())
                ? this.raise_error_invalid_target(Vs, t)
                : ((this._mark = s), null)
        );
    }
    invalid_group() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.expect(7)) && (t = this.starred_expression()) && (r = this.expect(8))
            ? this.raise_error_known_location(d, t.lineno, t.col_offset + 1, "can't use starred expression here")
            : ((this._mark = s), null);
    }
    invalid_import_from_targets() {
        let t,
            e,
            r = this._mark;
        return (t = this.import_from_as_names()) && (e = this.expect(12))
            ? this.raise_error(d, "trailing comma not allowed without surrounding parentheses")
            : ((this._mark = r), null);
    }
    _loop0_1() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.expect(4)); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_2() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.expect(4)); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_4() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.expression()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_3() {
        let t,
            e,
            r = this._mark;
        return (t = this.expression()) !== null && (e = this._loop0_4()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_6() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.expression()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_5() {
        let t,
            e,
            r = this._mark;
        return (t = this.expression()) !== null && (e = this._loop0_6()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_8() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.expression()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_7() {
        let t,
            e,
            r = this._mark;
        return (t = this.expression()) !== null && (e = this._loop0_8()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_10() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.expression()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_9() {
        let t,
            e,
            r = this._mark;
        return (t = this.expression()) !== null && (e = this._loop0_10()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop1_11() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.statement()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_13() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(13)) && (t = this.small_stmt()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_12() {
        let t,
            e,
            r = this._mark;
        return (t = this.small_stmt()) !== null && (e = this._loop0_13()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _tmp_14() {
        let t,
            e = this._mark;
        return (t = this.keyword("import")) || ((this._mark = e), (t = this.keyword("from")))
            ? t
            : ((this._mark = e), null);
    }
    _tmp_15() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.keyword("def"))
            ? e
            : ((this._mark = s),
              (r = this.expect(49)) ? r : ((this._mark = s), (t = this.expect(56)) ? t : ((this._mark = s), null)));
    }
    _tmp_16() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("class"))
            ? t
            : ((this._mark = r), (e = this.expect(49)) ? e : ((this._mark = r), null));
    }
    _tmp_17() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("with"))
            ? e
            : ((this._mark = r), (t = this.expect(56)) ? t : ((this._mark = r), null));
    }
    _tmp_18() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("for"))
            ? e
            : ((this._mark = r), (t = this.expect(56)) ? t : ((this._mark = r), null));
    }
    _tmp_19() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(22)) && (t = this.annotated_rhs()) ? t : ((this._mark = r), null);
    }
    _tmp_20() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (e = this.expect(7)) && (t = this.single_target()) && (r = this.expect(8))
            ? t
            : ((this._mark = n), (s = this.single_subscript_attribute_target()) ? s : ((this._mark = n), null));
    }
    _tmp_21() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(22)) && (t = this.annotated_rhs()) ? t : ((this._mark = r), null);
    }
    _loop1_22() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_137()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _tmp_23() {
        let t,
            e,
            r = this._mark;
        return (e = this.yield_expr())
            ? e
            : ((this._mark = r), (t = this.star_expressions()) ? t : ((this._mark = r), null));
    }
    _tmp_24() {
        let t,
            e,
            r = this._mark;
        return (e = this.yield_expr())
            ? e
            : ((this._mark = r), (t = this.star_expressions()) ? t : ((this._mark = r), null));
    }
    _loop0_26() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.name()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_25() {
        let t,
            e,
            r = this._mark;
        return (t = this.name()) !== null && (e = this._loop0_26()) !== null ? [t, ...e] : ((this._mark = r), null);
    }
    _loop0_28() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.name()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_27() {
        let t,
            e,
            r = this._mark;
        return (t = this.name()) !== null && (e = this._loop0_28()) !== null ? [t, ...e] : ((this._mark = r), null);
    }
    _tmp_29() {
        let t,
            e,
            r = this._mark;
        return (t = this.expect(12)) && (e = this.expression()) ? e : ((this._mark = r), null);
    }
    _tmp_30() {
        let t,
            e,
            r = this._mark;
        return (t = this.expect(13)) ? t : ((this._mark = r), (e = this.expect(4)) ? e : ((this._mark = r), null));
    }
    _loop0_31() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_138()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_32() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_139()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_34() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.import_from_as_name()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_33() {
        let t,
            e,
            r = this._mark;
        return (t = this.import_from_as_name()) !== null && (e = this._loop0_34()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _tmp_35() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("as")) && (e = this.name()) ? e : ((this._mark = r), null);
    }
    _loop0_37() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.dotted_as_name()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_36() {
        let t,
            e,
            r = this._mark;
        return (t = this.dotted_as_name()) !== null && (e = this._loop0_37()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _tmp_38() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("as")) && (e = this.name()) ? e : ((this._mark = r), null);
    }
    _loop0_40() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.with_item()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_39() {
        let t,
            e,
            r = this._mark;
        return (t = this.with_item()) !== null && (e = this._loop0_40()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_42() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.with_item()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_41() {
        let t,
            e,
            r = this._mark;
        return (t = this.with_item()) !== null && (e = this._loop0_42()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_44() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.with_item()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_43() {
        let t,
            e,
            r = this._mark;
        return (t = this.with_item()) !== null && (e = this._loop0_44()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_46() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.with_item()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_45() {
        let t,
            e,
            r = this._mark;
        return (t = this.with_item()) !== null && (e = this._loop0_46()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _tmp_47() {
        let t,
            e = this._mark;
        return (t = this.expect(12)) ||
            ((this._mark = e), (t = this.expect(8))) ||
            ((this._mark = e), (t = this.expect(11)))
            ? t
            : ((this._mark = e), null);
    }
    _loop1_48() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.except_block()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _tmp_49() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("as")) && (e = this.name()) ? e : ((this._mark = r), null);
    }
    _tmp_50() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("from")) && (e = this.expression()) ? e : ((this._mark = r), null);
    }
    _tmp_51() {
        let t,
            e,
            r = this._mark;
        return (t = this.expect(51)) && (e = this.expression()) ? e : ((this._mark = r), null);
    }
    _tmp_52() {
        let t,
            e,
            r = this._mark;
        return (t = this.expect(51)) && (e = this.expression()) ? e : ((this._mark = r), null);
    }
    _tmp_53() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(4)) && (t = this.expect(5)) ? [e, t] : ((this._mark = r), null);
    }
    _loop0_54() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_55() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_56() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_57() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_58() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_59() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_60() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_61() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_62() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_63() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_64() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_65() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_66() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_maybe_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_67() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_maybe_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_68() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_140()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _tmp_69() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.expect(7)) && ((r = this.arguments_()), 1) && (e = this.expect(8))
            ? r
            : ((this._mark = s), null);
    }
    _loop1_70() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_141()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_72() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.star_named_expression()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_71() {
        let t,
            e,
            r = this._mark;
        return (t = this.star_named_expression()) !== null && (e = this._loop0_72()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop1_73() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_142()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_74() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_75() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_76() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_77() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_78() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_79() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_80() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_81() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_82() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_83() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_84() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_85() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_86() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_maybe_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop1_87() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_maybe_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_88() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_143()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_89() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_144()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_90() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.compare_op_bitwise_or_pair()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_92() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.slice()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_91() {
        let t,
            e,
            r = this._mark;
        return (t = this.slice()) !== null && (e = this._loop0_92()) !== null ? [t, ...e] : ((this._mark = r), null);
    }
    _tmp_93() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(11)) && ((t = this.expression()), 1) ? t : ((this._mark = r), null);
    }
    _tmp_94() {
        let t,
            e,
            r,
            s = this._mark;
        return (r = this.tuple())
            ? r
            : ((this._mark = s),
              (e = this.group()) ? e : ((this._mark = s), (t = this.genexp()) ? t : ((this._mark = s), null)));
    }
    _tmp_95() {
        let t,
            e,
            r = this._mark;
        return (t = this.list()) ? t : ((this._mark = r), (e = this.listcomp()) ? e : ((this._mark = r), null));
    }
    _tmp_96() {
        let t,
            e,
            r,
            s,
            n = this._mark;
        return (t = this.dict())
            ? t
            : ((this._mark = n),
              (r = this.set())
                  ? r
                  : ((this._mark = n),
                    (e = this.dictcomp())
                        ? e
                        : ((this._mark = n), (s = this.setcomp()) ? s : ((this._mark = n), null))));
    }
    _loop1_97() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.string()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _tmp_98() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.star_named_expression()) && (t = this.expect(12)) && ((r = this.star_named_expressions()), 1)
            ? xt(this, e, r)
            : ((this._mark = s), null);
    }
    _tmp_99() {
        let t,
            e,
            r = this._mark;
        return (e = this.yield_expr())
            ? e
            : ((this._mark = r), (t = this.named_expression()) ? t : ((this._mark = r), null));
    }
    _loop0_101() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.double_starred_kvpair()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_100() {
        let t,
            e,
            r = this._mark;
        return (t = this.double_starred_kvpair()) !== null && (e = this._loop0_101()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop1_102() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.for_if_clause()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop0_103() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_145()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_104() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_146()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_106() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this._tmp_147()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_105() {
        let t,
            e,
            r = this._mark;
        return (t = this._tmp_147()) !== null && (e = this._loop0_106()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _tmp_107() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(12)) && (t = this.kwargs()) ? t : ((this._mark = r), null);
    }
    _loop0_109() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.kwarg_or_starred()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_108() {
        let t,
            e,
            r = this._mark;
        return (t = this.kwarg_or_starred()) !== null && (e = this._loop0_109()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_111() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.kwarg_or_double_starred()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_110() {
        let t,
            e,
            r = this._mark;
        return (t = this.kwarg_or_double_starred()) !== null && (e = this._loop0_111()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_113() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.kwarg_or_starred()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_112() {
        let t,
            e,
            r = this._mark;
        return (t = this.kwarg_or_starred()) !== null && (e = this._loop0_113()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_115() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.kwarg_or_double_starred()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_114() {
        let t,
            e,
            r = this._mark;
        return (t = this.kwarg_or_double_starred()) !== null && (e = this._loop0_115()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_116() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_148()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_118() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.star_target()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_117() {
        let t,
            e,
            r = this._mark;
        return (t = this.star_target()) !== null && (e = this._loop0_118()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop1_119() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_149()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _tmp_120() {
        let t,
            e = this._mark;
        return this.negative_lookahead(this.expect, 16) && (t = this.star_target()) ? t : ((this._mark = e), null);
    }
    _loop0_122() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.del_target()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_121() {
        let t,
            e,
            r = this._mark;
        return (t = this.del_target()) !== null && (e = this._loop0_122()) !== null
            ? [t, ...e]
            : ((this._mark = r), null);
    }
    _loop0_124() {
        let t,
            e,
            r = [],
            s = this._mark;
        for (; (e = this.expect(12)) && (t = this.target()); ) r.push(t), (s = this._mark);
        return (this._mark = s), r;
    }
    _gather_123() {
        let t,
            e,
            r = this._mark;
        return (t = this.target()) !== null && (e = this._loop0_124()) !== null ? [t, ...e] : ((this._mark = r), null);
    }
    _tmp_125() {
        let t,
            e,
            r,
            s = this._mark;
        return (t = this.args())
            ? t
            : ((this._mark = s),
              (e = this.expression()) && (r = this.for_if_clauses()) ? [e, r] : ((this._mark = s), null));
    }
    _loop0_126() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.star_named_expressions()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_127() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_150()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _loop0_128() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this._tmp_151()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _tmp_129() {
        let t,
            e,
            r = this._mark;
        return (e = this.yield_expr())
            ? e
            : ((this._mark = r), (t = this.star_expressions()) ? t : ((this._mark = r), null));
    }
    _tmp_130() {
        let t,
            e = this._mark;
        return (t = this.expect(9)) ||
            ((this._mark = e), (t = this.expect(7))) ||
            ((this._mark = e), (t = this.expect(25)))
            ? t
            : ((this._mark = e), null);
    }
    _loop0_131() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _tmp_132() {
        let t,
            e,
            r = this._mark;
        return (e = this.slash_with_default())
            ? e
            : ((this._mark = r), (t = this._loop1_152()) ? t : ((this._mark = r), null));
    }
    _loop0_133() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_no_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e;
    }
    _tmp_134() {
        let t,
            e,
            r = this._mark;
        return (e = this.lambda_slash_with_default())
            ? e
            : ((this._mark = r), (t = this._loop1_153()) ? t : ((this._mark = r), null));
    }
    _tmp_135() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(8))
            ? e
            : ((this._mark = r), (e = this.expect(12)) && (t = this._tmp_154()) ? [e, t] : ((this._mark = r), null));
    }
    _tmp_136() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(11))
            ? e
            : ((this._mark = r), (e = this.expect(12)) && (t = this._tmp_155()) ? [e, t] : ((this._mark = r), null));
    }
    _tmp_137() {
        let t,
            e,
            r = this._mark;
        return (e = this.star_targets()) && (t = this.expect(22)) ? e : ((this._mark = r), null);
    }
    _tmp_138() {
        let t,
            e = this._mark;
        return (t = this.expect(23)) || ((this._mark = e), (t = this.expect(52))) ? t : ((this._mark = e), null);
    }
    _tmp_139() {
        let t,
            e = this._mark;
        return (t = this.expect(23)) || ((this._mark = e), (t = this.expect(52))) ? t : ((this._mark = e), null);
    }
    _tmp_140() {
        let t,
            e,
            r,
            s = this._mark;
        return (e = this.expect(49)) && (t = this.named_expression()) && (r = this.expect(4))
            ? t
            : ((this._mark = s), null);
    }
    _tmp_141() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(12)) && (t = this.star_expression()) ? t : ((this._mark = r), null);
    }
    _tmp_142() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(12)) && (t = this.expression()) ? t : ((this._mark = r), null);
    }
    _tmp_143() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("or")) && (t = this.conjunction()) ? t : ((this._mark = r), null);
    }
    _tmp_144() {
        let t,
            e,
            r = this._mark;
        return (e = this.keyword("and")) && (t = this.inversion()) ? t : ((this._mark = r), null);
    }
    _tmp_145() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("if")) && (e = this.disjunction()) ? e : ((this._mark = r), null);
    }
    _tmp_146() {
        let t,
            e,
            r = this._mark;
        return (t = this.keyword("if")) && (e = this.disjunction()) ? e : ((this._mark = r), null);
    }
    _tmp_147() {
        let t,
            e,
            r = this._mark;
        return (e = this.starred_expression())
            ? e
            : ((this._mark = r),
              (t = this.named_expression()) && this.negative_lookahead(this.expect, 22)
                  ? t
                  : ((this._mark = r), null));
    }
    _tmp_148() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(12)) && (t = this.star_target()) ? t : ((this._mark = r), null);
    }
    _tmp_149() {
        let t,
            e,
            r = this._mark;
        return (e = this.expect(12)) && (t = this.star_target()) ? t : ((this._mark = r), null);
    }
    _tmp_150() {
        let t,
            e,
            r = this._mark;
        return (e = this.star_targets()) && (t = this.expect(22)) ? [e, t] : ((this._mark = r), null);
    }
    _tmp_151() {
        let t,
            e,
            r = this._mark;
        return (e = this.star_targets()) && (t = this.expect(22)) ? [e, t] : ((this._mark = r), null);
    }
    _loop1_152() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _loop1_153() {
        let t,
            e = [],
            r = this._mark;
        for (; (t = this.lambda_param_with_default()); ) e.push(t), (r = this._mark);
        return (this._mark = r), e.length ? e : null;
    }
    _tmp_154() {
        let t,
            e = this._mark;
        return (t = this.expect(8)) || ((this._mark = e), (t = this.expect(35))) ? t : ((this._mark = e), null);
    }
    _tmp_155() {
        let t,
            e = this._mark;
        return (t = this.expect(11)) || ((this._mark = e), (t = this.expect(35))) ? t : ((this._mark = e), null);
    }
};
l([o], u.prototype, "file", 1),
    l([o], u.prototype, "interactive", 1),
    l([o], u.prototype, "eval", 1),
    l([o], u.prototype, "func_type", 1),
    l([o], u.prototype, "fstring", 1),
    l([o], u.prototype, "type_expressions", 1),
    l([o], u.prototype, "statements", 1),
    l([o], u.prototype, "statement", 1),
    l([o], u.prototype, "statement_newline", 1),
    l([o], u.prototype, "simple_stmt", 1),
    l([o], u.prototype, "small_stmt", 1),
    l([o], u.prototype, "compound_stmt", 1),
    l([o], u.prototype, "assignment", 1),
    l([o], u.prototype, "augassign", 1),
    l([o], u.prototype, "global_stmt", 1),
    l([o], u.prototype, "nonlocal_stmt", 1),
    l([o], u.prototype, "yield_stmt", 1),
    l([o], u.prototype, "assert_stmt", 1),
    l([o], u.prototype, "del_stmt", 1),
    l([o], u.prototype, "import_stmt", 1),
    l([o], u.prototype, "import_name", 1),
    l([o], u.prototype, "import_from", 1),
    l([o], u.prototype, "import_from_targets", 1),
    l([o], u.prototype, "import_from_as_names", 1),
    l([o], u.prototype, "import_from_as_name", 1),
    l([o], u.prototype, "dotted_as_names", 1),
    l([o], u.prototype, "dotted_as_name", 1),
    l([rt], u.prototype, "dotted_name", 1),
    l([o], u.prototype, "if_stmt", 1),
    l([o], u.prototype, "elif_stmt", 1),
    l([o], u.prototype, "else_block", 1),
    l([o], u.prototype, "while_stmt", 1),
    l([o], u.prototype, "for_stmt", 1),
    l([o], u.prototype, "with_stmt", 1),
    l([o], u.prototype, "with_item", 1),
    l([o], u.prototype, "try_stmt", 1),
    l([o], u.prototype, "except_block", 1),
    l([o], u.prototype, "finally_block", 1),
    l([o], u.prototype, "return_stmt", 1),
    l([o], u.prototype, "raise_stmt", 1),
    l([o], u.prototype, "function_def", 1),
    l([o], u.prototype, "function_def_raw", 1),
    l([o], u.prototype, "func_type_comment", 1),
    l([o], u.prototype, "params", 1),
    l([o], u.prototype, "parameters", 1),
    l([o], u.prototype, "slash_no_default", 1),
    l([o], u.prototype, "slash_with_default", 1),
    l([o], u.prototype, "star_etc", 1),
    l([o], u.prototype, "kwds", 1),
    l([o], u.prototype, "param_no_default", 1),
    l([o], u.prototype, "param_with_default", 1),
    l([o], u.prototype, "param_maybe_default", 1),
    l([o], u.prototype, "param", 1),
    l([o], u.prototype, "annotation", 1),
    l([o], u.prototype, "default", 1),
    l([o], u.prototype, "decorators", 1),
    l([o], u.prototype, "class_def", 1),
    l([o], u.prototype, "class_def_raw", 1),
    l([o], u.prototype, "block", 1),
    l([o], u.prototype, "star_expressions", 1),
    l([o], u.prototype, "star_expression", 1),
    l([o], u.prototype, "star_named_expressions", 1),
    l([o], u.prototype, "star_named_expression", 1),
    l([o], u.prototype, "named_expression", 1),
    l([o], u.prototype, "annotated_rhs", 1),
    l([o], u.prototype, "expressions", 1),
    l([o], u.prototype, "expression", 1),
    l([o], u.prototype, "lambdef", 1),
    l([o], u.prototype, "lambda_params", 1),
    l([o], u.prototype, "lambda_parameters", 1),
    l([o], u.prototype, "lambda_slash_no_default", 1),
    l([o], u.prototype, "lambda_slash_with_default", 1),
    l([o], u.prototype, "lambda_star_etc", 1),
    l([o], u.prototype, "lambda_kwds", 1),
    l([o], u.prototype, "lambda_param_no_default", 1),
    l([o], u.prototype, "lambda_param_with_default", 1),
    l([o], u.prototype, "lambda_param_maybe_default", 1),
    l([o], u.prototype, "lambda_param", 1),
    l([o], u.prototype, "disjunction", 1),
    l([o], u.prototype, "conjunction", 1),
    l([o], u.prototype, "inversion", 1),
    l([o], u.prototype, "comparison", 1),
    l([o], u.prototype, "compare_op_bitwise_or_pair", 1),
    l([o], u.prototype, "eq_bitwise_or", 1),
    l([o], u.prototype, "noteq_bitwise_or", 1),
    l([o], u.prototype, "lte_bitwise_or", 1),
    l([o], u.prototype, "lt_bitwise_or", 1),
    l([o], u.prototype, "gte_bitwise_or", 1),
    l([o], u.prototype, "gt_bitwise_or", 1),
    l([o], u.prototype, "notin_bitwise_or", 1),
    l([o], u.prototype, "in_bitwise_or", 1),
    l([o], u.prototype, "isnot_bitwise_or", 1),
    l([o], u.prototype, "is_bitwise_or", 1),
    l([rt], u.prototype, "bitwise_or", 1),
    l([rt], u.prototype, "bitwise_xor", 1),
    l([rt], u.prototype, "bitwise_and", 1),
    l([rt], u.prototype, "shift_expr", 1),
    l([rt], u.prototype, "sum", 1),
    l([rt], u.prototype, "term", 1),
    l([o], u.prototype, "factor", 1),
    l([o], u.prototype, "power", 1),
    l([o], u.prototype, "await_primary", 1),
    l([rt], u.prototype, "primary", 1),
    l([o], u.prototype, "slices", 1),
    l([o], u.prototype, "slice", 1),
    l([o], u.prototype, "atom", 1),
    l([o], u.prototype, "strings", 1),
    l([o], u.prototype, "list", 1),
    l([o], u.prototype, "listcomp", 1),
    l([o], u.prototype, "tuple", 1),
    l([o], u.prototype, "group", 1),
    l([o], u.prototype, "genexp", 1),
    l([o], u.prototype, "set", 1),
    l([o], u.prototype, "setcomp", 1),
    l([o], u.prototype, "dict", 1),
    l([o], u.prototype, "dictcomp", 1),
    l([o], u.prototype, "double_starred_kvpairs", 1),
    l([o], u.prototype, "double_starred_kvpair", 1),
    l([o], u.prototype, "kvpair", 1),
    l([o], u.prototype, "for_if_clauses", 1),
    l([o], u.prototype, "for_if_clause", 1),
    l([o], u.prototype, "yield_expr", 1),
    l([o], u.prototype, "arguments_", 1),
    l([o], u.prototype, "args", 1),
    l([o], u.prototype, "kwargs", 1),
    l([o], u.prototype, "starred_expression", 1),
    l([o], u.prototype, "kwarg_or_starred", 1),
    l([o], u.prototype, "kwarg_or_double_starred", 1),
    l([o], u.prototype, "star_targets", 1),
    l([o], u.prototype, "star_targets_list_seq", 1),
    l([o], u.prototype, "star_targets_tuple_seq", 1),
    l([o], u.prototype, "star_target", 1),
    l([o], u.prototype, "target_with_star_atom", 1),
    l([o], u.prototype, "star_atom", 1),
    l([o], u.prototype, "single_target", 1),
    l([o], u.prototype, "single_subscript_attribute_target", 1),
    l([o], u.prototype, "del_targets", 1),
    l([o], u.prototype, "del_target", 1),
    l([o], u.prototype, "del_t_atom", 1),
    l([o], u.prototype, "targets", 1),
    l([o], u.prototype, "target", 1),
    l([rt], u.prototype, "t_primary", 1),
    l([o], u.prototype, "t_lookahead", 1),
    l([o], u.prototype, "t_atom", 1),
    l([o], u.prototype, "invalid_arguments", 1),
    l([o], u.prototype, "invalid_kwarg", 1),
    l([o], u.prototype, "invalid_named_expression", 1),
    l([o], u.prototype, "invalid_assignment", 1),
    l([o], u.prototype, "invalid_ann_assign_target", 1),
    l([o], u.prototype, "invalid_del_stmt", 1),
    l([o], u.prototype, "invalid_block", 1),
    l([xi], u.prototype, "invalid_primary", 1),
    l([o], u.prototype, "invalid_comprehension", 1),
    l([o], u.prototype, "invalid_dict_comprehension", 1),
    l([o], u.prototype, "invalid_parameters", 1),
    l([o], u.prototype, "invalid_lambda_parameters", 1),
    l([o], u.prototype, "invalid_star_etc", 1),
    l([o], u.prototype, "invalid_lambda_star_etc", 1),
    l([o], u.prototype, "invalid_double_type_comments", 1),
    l([o], u.prototype, "invalid_with_item", 1),
    l([o], u.prototype, "invalid_for_target", 1),
    l([o], u.prototype, "invalid_group", 1),
    l([o], u.prototype, "invalid_import_from_targets", 1),
    l([o], u.prototype, "_loop0_1", 1),
    l([o], u.prototype, "_loop0_2", 1),
    l([o], u.prototype, "_loop0_4", 1),
    l([o], u.prototype, "_gather_3", 1),
    l([o], u.prototype, "_loop0_6", 1),
    l([o], u.prototype, "_gather_5", 1),
    l([o], u.prototype, "_loop0_8", 1),
    l([o], u.prototype, "_gather_7", 1),
    l([o], u.prototype, "_loop0_10", 1),
    l([o], u.prototype, "_gather_9", 1),
    l([o], u.prototype, "_loop1_11", 1),
    l([o], u.prototype, "_loop0_13", 1),
    l([o], u.prototype, "_gather_12", 1),
    l([o], u.prototype, "_loop1_22", 1),
    l([o], u.prototype, "_loop0_26", 1),
    l([o], u.prototype, "_gather_25", 1),
    l([o], u.prototype, "_loop0_28", 1),
    l([o], u.prototype, "_gather_27", 1),
    l([o], u.prototype, "_loop0_31", 1),
    l([o], u.prototype, "_loop1_32", 1),
    l([o], u.prototype, "_loop0_34", 1),
    l([o], u.prototype, "_gather_33", 1),
    l([o], u.prototype, "_loop0_37", 1),
    l([o], u.prototype, "_gather_36", 1),
    l([o], u.prototype, "_loop0_40", 1),
    l([o], u.prototype, "_gather_39", 1),
    l([o], u.prototype, "_loop0_42", 1),
    l([o], u.prototype, "_gather_41", 1),
    l([o], u.prototype, "_loop0_44", 1),
    l([o], u.prototype, "_gather_43", 1),
    l([o], u.prototype, "_loop0_46", 1),
    l([o], u.prototype, "_gather_45", 1),
    l([o], u.prototype, "_loop1_48", 1),
    l([o], u.prototype, "_loop0_54", 1),
    l([o], u.prototype, "_loop0_55", 1),
    l([o], u.prototype, "_loop0_56", 1),
    l([o], u.prototype, "_loop1_57", 1),
    l([o], u.prototype, "_loop0_58", 1),
    l([o], u.prototype, "_loop1_59", 1),
    l([o], u.prototype, "_loop1_60", 1),
    l([o], u.prototype, "_loop1_61", 1),
    l([o], u.prototype, "_loop0_62", 1),
    l([o], u.prototype, "_loop1_63", 1),
    l([o], u.prototype, "_loop0_64", 1),
    l([o], u.prototype, "_loop1_65", 1),
    l([o], u.prototype, "_loop0_66", 1),
    l([o], u.prototype, "_loop1_67", 1),
    l([o], u.prototype, "_loop1_68", 1),
    l([o], u.prototype, "_loop1_70", 1),
    l([o], u.prototype, "_loop0_72", 1),
    l([o], u.prototype, "_gather_71", 1),
    l([o], u.prototype, "_loop1_73", 1),
    l([o], u.prototype, "_loop0_74", 1),
    l([o], u.prototype, "_loop0_75", 1),
    l([o], u.prototype, "_loop0_76", 1),
    l([o], u.prototype, "_loop1_77", 1),
    l([o], u.prototype, "_loop0_78", 1),
    l([o], u.prototype, "_loop1_79", 1),
    l([o], u.prototype, "_loop1_80", 1),
    l([o], u.prototype, "_loop1_81", 1),
    l([o], u.prototype, "_loop0_82", 1),
    l([o], u.prototype, "_loop1_83", 1),
    l([o], u.prototype, "_loop0_84", 1),
    l([o], u.prototype, "_loop1_85", 1),
    l([o], u.prototype, "_loop0_86", 1),
    l([o], u.prototype, "_loop1_87", 1),
    l([o], u.prototype, "_loop1_88", 1),
    l([o], u.prototype, "_loop1_89", 1),
    l([o], u.prototype, "_loop1_90", 1),
    l([o], u.prototype, "_loop0_92", 1),
    l([o], u.prototype, "_gather_91", 1),
    l([o], u.prototype, "_loop1_97", 1),
    l([o], u.prototype, "_loop0_101", 1),
    l([o], u.prototype, "_gather_100", 1),
    l([o], u.prototype, "_loop1_102", 1),
    l([o], u.prototype, "_loop0_103", 1),
    l([o], u.prototype, "_loop0_104", 1),
    l([o], u.prototype, "_loop0_106", 1),
    l([o], u.prototype, "_gather_105", 1),
    l([o], u.prototype, "_loop0_109", 1),
    l([o], u.prototype, "_gather_108", 1),
    l([o], u.prototype, "_loop0_111", 1),
    l([o], u.prototype, "_gather_110", 1),
    l([o], u.prototype, "_loop0_113", 1),
    l([o], u.prototype, "_gather_112", 1),
    l([o], u.prototype, "_loop0_115", 1),
    l([o], u.prototype, "_gather_114", 1),
    l([o], u.prototype, "_loop0_116", 1),
    l([o], u.prototype, "_loop0_118", 1),
    l([o], u.prototype, "_gather_117", 1),
    l([o], u.prototype, "_loop1_119", 1),
    l([o], u.prototype, "_loop0_122", 1),
    l([o], u.prototype, "_gather_121", 1),
    l([o], u.prototype, "_loop0_124", 1),
    l([o], u.prototype, "_gather_123", 1),
    l([o], u.prototype, "_loop0_126", 1),
    l([o], u.prototype, "_loop0_127", 1),
    l([o], u.prototype, "_loop0_128", 1),
    l([o], u.prototype, "_loop0_131", 1),
    l([o], u.prototype, "_loop0_133", 1),
    l([o], u.prototype, "_loop1_152", 1),
    l([o], u.prototype, "_loop1_153", 1);
var fi = new Set([
    "return",
    "raise",
    "pass",
    "del",
    "yield",
    "assert",
    "break",
    "continue",
    "global",
    "nonlocal",
    "if",
    "try",
    "while",
    "import",
    "from",
    "elif",
    "else",
    "for",
    "in",
    "with",
    "as",
    "except",
    "finally",
    "def",
    "class",
    "lambda",
    "not",
    "is",
    "True",
    "False",
    "None",
    "__peg_parser__",
    "or",
    "and",
]);
function On(i) {
    switch (i) {
        case "exec":
            return v.FILE_INPUT;
        case "eval":
            return v.EVAL_INPUT;
        case "single":
            return v.SINGLE_INPUT;
        default:
            throw new Error(`bad mode - got ${i} - use 'exec', 'eval' or 'single'`);
    }
}
function Ai(i, t = "exec", e = "<string>") {
    let r = new u(Se(i, e), On(t));
    return (r.filename = e), r;
}
function Xn(i, t = "exec", e = "<string>") {
    return Ai(i, t, e).parse();
}
export { Re as Tokenizer, Ai as parserFromString, Xn as runParserFromString, ir as tokenize };
